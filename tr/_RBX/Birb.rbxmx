<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBXA58AB6CC38C140C3BE9AF57357CC9479">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">Birb</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="LocalScript" referent="RBX85FA68BF47A64917858C6E040E67AC8B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name"></string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{5F4222AF-C99A-4C4E-83A2-400496315AE3}</string>
				<ProtectedString name="Source"><![CDATA[require(script:FindFirstChildOfClass("ModuleScript"))()
print("Loading...")]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX4910076C6B38424280C9E24EC311EDCA">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name"></string>
					<string name="ScriptGuid">{78F7758A-E901-4A15-B429-6B9B6C390BAA}</string>
					<ProtectedString name="Source"><![CDATA[return function()
	getfenv(2)["print"] = function(...)
		local plugin = getfenv(2)["plugin"]
		local CoreGui = game:GetService("CoreGui")
		local ToolBar = plugin:CreateToolbar("Birb")
		local Players = game:GetService("Players")
		local UserService = game:GetService("UserService")
		local Selection = game:GetService("Selection")
		local Studio = game:GetService("StudioService")
		local HTTPService = game:GetService("HttpService")
		local Tween = game:GetService("TweenService")
		local ExportUIButton = ToolBar:CreateButton("Birb.rbxm","Run Birb.rbxm","rbxassetid://11921115116")
		if CoreGui:FindFirstChild("Birb")then repeat task.wait();CoreGui:FindFirstChild("Birb"):Destroy();until not CoreGui:FindFirstChild("Birb");end;
		ExportUIButton:SetActive(false)
		local animExist = {}
		local animNames = { 
			idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=507766666", weight = 1 },
				{ id = "http://www.roblox.com/asset/?id=507766951", weight = 1 },
				{ id = "http://www.roblox.com/asset/?id=507766388", weight = 9 }
			},
			walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=507777826", weight = 10 } 
			}, 
			run = 	{
				{ id = "http://www.roblox.com/asset/?id=507767714", weight = 10 } 
			}, 
			swim = 	{
				{ id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } 
			}, 
			swimidle = 	{
				{ id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } 
			}, 
			jump = 	{
				{ id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } 
			}, 
			fall = 	{
				{ id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } 
			}, 
			climb = {
				{ id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } 
			}, 
			sit = 	{
				{ id = "http://www.roblox.com/asset/?id=2506281703", weight = 10 } 
			},	
			toolnone = {
				{ id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } 
			},
			toolslash = {
				{ id = "http://www.roblox.com/asset/?id=522635514", weight = 10 } 
			},
			toollunge = {
				{ id = "http://www.roblox.com/asset/?id=522638767", weight = 10 } 
			},
			wave = {
				{ id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } 
			},
			point = {
				{ id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } 
			},
			dance = {
				{ id = "http://www.roblox.com/asset/?id=507771019", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507771955", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } 
			},
			dance2 = {
				{ id = "http://www.roblox.com/asset/?id=507776043", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776720", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } 
			},
			dance3 = {
				{ id = "http://www.roblox.com/asset/?id=507777268", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777451", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } 
			},
			laugh = {
				{ id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } 
			},
			cheer = {
				{ id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } 
			},
		}
		local MapperFolder = Instance.new("Folder",CoreGui)
		local KeyframePlayer
		MapperFolder.Name = "Birb"
		local function setCursor(cursorAsset)
			plugin:GetMouse().Icon = cursorAsset
		end
		ExportUIButton.Click:Once(function()
			ExportUIButton:SetActive(true)
			coroutine.wrap(function()
				while wait() do
					ExportUIButton:SetActive(false)
					wait()
					ExportUIButton:SetActive(true)
				end
			end)()
			local Download = plugin:CreateDockWidgetPluginGui("Download",DockWidgetPluginGuiInfo.new(Enum.InitialDockState.Float,true,true,300,300,300,300))
			local Down = true
			Download.Title = "Downloading Birb.rbxm..."
			setCursor("rbxasset://SystemCursors/Busy")
			local Toast = script.Toast:Clone()
			Toast.Parent = Download
			Toast.Text = "Please wait..."
			wait(0.2)
			local Rng = {"zip","rar","lua","luau","rbxm","rbxmx"}
			local Type = "Downloading"
			coroutine.wrap(function()
				repeat
					setCursor("rbxasset://SystemCursors/Busy")
					Toast.Text = `{Type} {HTTPService:GenerateGUID(false)}.{Rng[math.random(#Rng)]}...`
					wait()
				until Down == false
				setCursor("rbxasset://SystemCursors/Wait")
			end)()
			for i=1,25 do
				if i==19 then
					Type = "Unzipping"
				end
				Download.Title = `Downloading Birb.rbxm... ({i}/{25})`
				wait(math.random(0,math.random(1,2)))
			end
			local UI = script:FindFirstChildOfClass("ScreenGui"):Clone()
			local ViewPort = UI:FindFirstChildOfClass("ViewportFrame")
			local Birb = script:FindFirstChildOfClass("Model"):Clone()
			Birb.Parent = ViewPort:FindFirstChildOfClass("WorldModel")
			wait()
			KeyframePlayer = require(script:FindFirstChildOfClass("ModuleScript"))
			local Camera = Instance.new("Camera")
			Camera.Name = " "
			Camera.CFrame = Birb.Torso["1"].WorldCFrame
			Camera.Parent = UI:FindFirstChildOfClass("ViewportFrame")
			ViewPort.CurrentCamera = Camera
			Download.Title = `Downloading Birb.rbxm... (Downloading KeyFramePlayer)`
			wait()
			Download.Title = `Finishing...`
			Down = false
			wait(1)
			setCursor("")
			Download:Destroy()
			UI.Parent = MapperFolder
			local DialogBox = UI:FindFirstChildOfClass("ViewportFrame"):FindFirstChildOfClass("Frame")
			local function startTalkDialog(text,tim)
				DialogBox.ChatBubbleFrame.Visible = false
				DialogBox.Visible = true
				wait(.1)
				DialogBox.ChatBubbleFrame.Visible = true
				local Text = KeyframePlayer:New(DialogBox.ChatBubbleFrame.Text,`<AnimateStyle=Wiggle><Font=GothamMedium><TextColor3=57,59,61>{text}<TextColor3=/><Font=/><AnimateStyle=/>`);
				Text.TextYAlignment = "Top"
				Text.TextYAlignment = "Left"
				Text:Animate(true);
				wait(tim)
				DialogBox.ChatBubbleFrame.Text:ClearAllChildren()
				DialogBox.ChatBubbleFrame.Visible = false
				wait()
				DialogBox.Visible = false
			end
			local function setGooseCam(Direction:Enum,Speed:number)
				local Block
				if Direction==Enum.NormalId.Front then
					Block = "1"
				elseif Direction==Enum.NormalId.Left then
					Block = "3"
				elseif Direction==Enum.NormalId.Right then
					Block = "2"
				elseif Direction==Enum.NormalId.Back then
					Block = "4"						
				end
				Tween:Create(Camera,TweenInfo.new(1,Enum.EasingStyle.Linear),{CFrame=Birb.Torso[Block].WorldCFrame}):Play()
			end
			local function randomScale()
				local r = math.random(0,1000)
				if r==1000 then
					return 1
				else
					return tonumber(tostring("0."..r))
				end
			end
			local soundui = plugin:CreateDockWidgetPluginGui("__GOOSENOISE", DockWidgetPluginGuiInfo.new(
				Enum.InitialDockState.Float,
				false, true,
				10, 10,
				10, 10
				))
			local function playSound(AudioId,Volume)
				local sound = Instance.new("Sound",soundui)
				sound.SoundId = AudioId
				sound.Volume = (Volume)or(2)
				sound.Ended:Connect(function()
					sound:Destroy()
				end)
				sound:Play()
			end
			soundui.Title = "__GOOSENOISE"
			soundui.Name = "__GOOSENOISE"
			script:FindFirstChildOfClass("ModuleScript"):FindFirstChildOfClass("BindableEvent").Event:Connect(function(AudioId,Volume)
				playSound(AudioId,Volume)
			end)
			coroutine.wrap(function()
				setGooseCam(Enum.NormalId.Front,1)
				wait(1)
				startTalkDialog("hey<AnimateYield=0.8>.<AnimateYield=1>.<AnimateYield=1>.<AnimateYield=0.8> whos there...",2)
				wait(1.1)
				startTalkDialog(`oh hello {string.lower(UserService:GetUserInfosByUserIdsAsync({Studio:GetUserId()})[1].DisplayName)},<AnimateYield=2> allow me to introduce my self`,1.4)
				wait(0.99)
				startTalkDialog("im goose<AnimateYield=1.8> in roblox studio",1.1)
				wait(1.035)
				startTalkDialog("i will help u randomly pls let me stay thx c:",3.8)
				wait(2)
				local override = false
				local id = {7810274003,12654361273,11921115116,12159966424}
				coroutine.wrap(function()
					while wait(math.random(11,43)) do
						if math.random(1,2)==math.random(1,2) then
							repeat wait() until not override
							override = true
							setGooseCam(Enum.NormalId.Right,1)
							wait(0.5)
							ViewPort:TweenPosition(UDim2.fromScale(-0.5,randomScale()),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,6,true)
							wait(6)
							local drag = true
							local screngui = Instance.new("ScreenGui",MapperFolder)
							screngui.Name = "HONK"
							local Image = Instance.new("ImageLabel",screngui)
							Image.Visible = false
							Image.Name = "GOOSE"
							Image.Image = "rbxassetid://"..id[math.random(#id)]
							Image.Size = UDim2.fromOffset(100,100)
							Image.AnchorPoint = Vector2.new(.5,.5)
							spawn(function()
								repeat 
									Image.Position = ViewPort.Position
									wait()
								until drag==false
							end)
							Image.Visible = true
							setGooseCam(Enum.NormalId.Left,1)
							ViewPort:TweenPosition(UDim2.fromScale(randomScale(),randomScale()),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,6,true)
							wait(3)
							startTalkDialog("honk brought gifts",1.8)
							local Selected = Selection:Get()
							screngui.Parent = game:GetService("StarterGui")
							table.insert(Selected,screngui)
							Selection:Set(Selected)
							wait(3)
							drag = false
							override = false
						end
					end
				end)()
				coroutine.wrap(function()
					local r = {"HONK!!","honk","h o n k","*honks*"}
					while wait(math.random(2,6)) do
						startTalkDialog(r[math.random(#r)],1.4)
					end
				end)()
				coroutine.wrap(function()
					while wait() do
						for a,b in pairs(Selection:Get()) do
							if b:FindFirstAncestor("Birb")==MapperFolder or b==MapperFolder then
								override = true
								playSound("rbxassetid://8481038804",121.1111)
								setGooseCam(Enum.NormalId.Front,0)
								Selection:Set({})
								coroutine.wrap(function()
									setCursor("rbxasset://SystemCursors/Forbidden")
									DialogBox.Caret.ImageColor3 = Color3.fromRGB(35, 35, 35)
									DialogBox.ChatBubbleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
									startTalkDialog("<TextColor3=170,0,0>W̶̨̢͖̥͍͙̲͔̞̔̑̇̌̑͛̓̀̔͆H̶̤̄́Y̸̛̩͈̥̳̘͚̺̩̲̯͕͖̊̅̄̈́̽͑́̊̃͋̇͘͘͠ ̷̢̩̮̱̘͉̺̀̏̎̅̀͘͘̚͝Ḁ̸̻͔̦̺̯̞͙͙͒͛́͒͐̊̕͘͜ͅR̶̨̡̛͖͓͚̣͎̰͖͉̣̎̾̿̅́̉̂E̴̠̳̮͠ ̷̢̧̛̺̰̙͉̥͇͎͔̜͇̘̽̐̅̿̓́̓̈́̌̚͝Y̸̝̠̱̓̀̓͘O̶̧͚̮͇͉̖͍̤̟̘̱͖̲̼̎̈̌̽̀̀̒͌̂̂ͅṲ̵̧̣̗̣̟̳͊̽͑̿̀͛̂͌̄̕͜͠͝ ̶̹̫̥̣͔͐̽D̵̞̮̺̙̱̘̜̜̠͖͒̃̎̓̀̃͒͑O̶̧͇̥͕̊̌͜Ĭ̵̢̨͈͙̬̖̳͈̖̳̪̓͑̈͌̓͆͑̿͘͜N̶̢̛͚͕̻͕̍̿͋̏͗͜͝G̷̜͇̟͍̤̪̀̂͊̅͂̍̐̈́́̓͜ ̴͚͚͔̤̲͈̦̗͛̇̐̿̊T̷̪̙̺͔̞͔̬̮͖̳̱̩̯͊̿̿͑̉̑̇́̂̎̒̂͘H̴̡̛̱̯̭̺̬̗̹̘̗̊̇̐̽̍͊́͑̐̂͆̐͠A̷̛̼͖̩̰̫̣̙̤̙̹͍͎͌͂̆̆̕͝͠ͅT̴͓̝͉̫̮̪͇̎̈́̎̀̾̾̀̈́͜͝<TextColor3=/>",2.5)
									setCursor("")
									DialogBox.Caret.ImageColor3 = Color3.fromRGB(250, 250, 250)
									DialogBox.ChatBubbleFrame.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
									override = false
								end)()
								break
							end
						end
					end
				end)()
				coroutine.wrap(function()
					while wait(math.random(1,5)) do
						repeat wait() until not override
						override = true
						local x = randomScale()
						local xc = tonumber(string.split(tostring(ViewPort.Position.X),",")[1])
						if x >= xc then
							setGooseCam(Enum.NormalId.Left,0.6)
						else
							setGooseCam(Enum.NormalId.Right,0.6)
						end
						ViewPort:TweenPosition(UDim2.fromScale(x,randomScale()),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,math.random(2,8))
						wait(6)
						setGooseCam(Enum.NormalId.Front,0)
						override = false
					end
				end)()
			end)()
		end)
	end
end]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="TextLabel" referent="RBX43EFECE99F1C4CB5895D93B031E4C43F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Arial.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Toast</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Label</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">30</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Model" referent="RBX09D9BAE22E63454FADA9E4D83211C9E6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name"></string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>18.4907608</X>
								<Y>3.05175781e-05</Y>
								<Z>-14.1807098</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="MeshPart" referent="RBX94B3F0BF4E694351B1A8E253A331CAF9">
						<Properties>
							<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>18.4910088</X>
								<Y>2.97841167</Y>
								<Z>-15.351963</Z>
								<R00>1.00000048</R00>
								<R01>-7.45058326e-09</R01>
								<R02>2.98023259e-08</R02>
								<R10>-7.45058326e-09</R10>
								<R11>1.00000048</R11>
								<R12>-7.45058149e-09</R12>
								<R20>2.98023259e-08</R20>
								<R21>-7.45058149e-09</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4293040960</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="DoubleSided">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<token name="FluidFidelityInternal">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>19.5699005</X>
								<Y>49.6401901</Y>
								<Z>16.8093719</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<Content name="MeshId"><url>rbxassetid://13605672534</url></Content>
							<string name="Name">Goose</string>
							<SharedString name="PhysicalConfigData">awA43+s1hy5Qi2G1UcqLcw==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><null></null></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int name="VertexCount">0</int>
							<Vector3 name="size">
								<X>2.3483882</X>
								<Y>5.95682287</Y>
								<Z>2.01712465</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="MeshPart" referent="RBX472EEE90FF2D471E9DD383AFD9F95549">
						<Properties>
							<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>18.479435</X>
								<Y>3.32932186</Y>
								<Z>-13.9816236</Z>
								<R00>1.00000048</R00>
								<R01>-7.45058326e-09</R01>
								<R02>2.98023259e-08</R02>
								<R10>-7.45058326e-09</R10>
								<R11>1.00000048</R11>
								<R12>-7.45058149e-09</R12>
								<R20>2.98023259e-08</R20>
								<R21>-7.45058149e-09</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4293782250</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="DoubleSided">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<token name="FluidFidelityInternal">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>16.3239155</X>
								<Y>44.5113449</Y>
								<Z>33.0270576</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<Content name="MeshId"><url>rbxassetid://13605671915</url></Content>
							<string name="Name">Torso</string>
							<SharedString name="PhysicalConfigData">KsLcvepHPZbNmnQdee3f9A==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><null></null></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int name="VertexCount">0</int>
							<Vector3 name="size">
								<X>1.95886993</X>
								<Y>5.34136152</Y>
								<Z>3.96324706</Z>
							</Vector3>
						</Properties>
						<Item class="Attachment" referent="RBXF6DAB6765AE14A0BBCBDE86A38BFBCB2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>3.50000024</Y>
									<Z>-6</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.906307817</R11>
									<R12>0.4226183</R12>
									<R20>0</R20>
									<R21>0.4226183</R21>
									<R22>-0.906307817</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXEF4D886F2F3F49D1865EEDE803350FFA">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-6.5</X>
									<Y>3.00000024</Y>
									<Z>5.96046448e-08</Z>
									<R00>0</R00>
									<R01>0.258819073</R01>
									<R02>-0.965925872</R02>
									<R10>0</R10>
									<R11>0.965925872</R11>
									<R12>0.258819073</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">2</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX1400A294331040559490A2231CAEB6C4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>7</X>
									<Y>3.00000024</Y>
									<Z>5.96046448e-08</Z>
									<R00>0</R00>
									<R01>-0.258819073</R01>
									<R02>0.965925813</R02>
									<R10>0</R10>
									<R11>0.965925813</R11>
									<R12>0.258819073</R12>
									<R20>-1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">3</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXC1C5611ACA3F4106AFBDDF0F1CBF2D3F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>1.00000024</Y>
									<Z>5.5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">4</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
							</Properties>
						</Item>
					</Item>
					<Item class="MeshPart" referent="RBX2483B6B2A2504D6DB5C4654F7D9AFF36">
						<Properties>
							<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>18.4793968</X>
								<Y>5.79186916</Y>
								<Z>-15.5168333</Z>
								<R00>1.00000048</R00>
								<R01>-7.45058326e-09</R01>
								<R02>2.98023259e-08</R02>
								<R10>-7.45058326e-09</R10>
								<R11>1.00000048</R11>
								<R12>-7.45058149e-09</R12>
								<R20>2.98023259e-08</R20>
								<R21>-7.45058149e-09</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="DoubleSided">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<token name="FluidFidelityInternal">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>4.32129765</X>
								<Y>0.967014313</Y>
								<Z>1.35233593</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<Content name="MeshId"><url>rbxassetid://13605672617</url></Content>
							<string name="Name">Eyes</string>
							<SharedString name="PhysicalConfigData">bGzDsiEVpDDe5ksM5gQJ5A==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><null></null></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int name="VertexCount">0</int>
							<Vector3 name="size">
								<X>0.51855576</X>
								<Y>0.11604172</Y>
								<Z>0.162280321</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="AnimationController" referent="RBX22ED8F62C53B417DBDB5E4C29B392765">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">AnimationController</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Animator" referent="RBXFB48C6A06F1E4DF3B3319D06DCD2DB6D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Animator</string>
								<bool name="PreferLodEnabled">true</bool>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX60FC22B69D7C4C14AF4B6631A4533221">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name"></string>
						<string name="ScriptGuid">{7F7FAD88-14EA-4FA8-ACB7-E54F074ED44F}</string>
						<ProtectedString name="Source"><![CDATA[--[[
	
Rich text markup with support for modifying any TextLabel property per character + inline images + entrance animations

Written by Defaultio ~ August 30 2017

Changes:	
	October 21 2017 - Unicode support added thanks to Tiffany Bennett - https://gist.github.com/tiffany352/ccb3559738f4e8d4152d940126998c41
	January 29 2018 - Added finishAnimate parameter to RichTextObject:Show() function
					- Fixed bug on iOS devices causing some characters to fail to appear. Using TextWrapped = false on character labels fixed this, thanks Buildthomas.
	June 23 2019 	- Fixed reoccurance of bug where some characters fail to appear when on mobile, added one extra pixel to each character frame.
	July 16 2018	- Disabled AutoLocalize for generated text labels


			TODO:
				- exit animations
				- emphasis animations
				- support for inline buttons
				- sounds for each text step
				- markup events that will fire a callback provided in the constructor when the text animation is reached, use for character animations, etc
			
			Let me know if these features will be useful and I'll add them more quickly.

___________________________________________________________________________________________________________________

API:

Constructor:

	RichText:New(GuiObject frame, String text, Dictionary startingProperties = {}, Boolean allowOverflow = true)
		frame: the parent frame which will be populated with text
		text: self explanitory
		startingProperties: a dictionary of what the default text properties should be
		allowOverflow: if false, text will stop rendering when it fills the vertical height of the frame. To continue the text in another frame, see RichText:ContinueOverflow() below...
		
		returns: richText object
			
	RichText:ContinueOverflow(GuiObject nextFrame, RichTextObject previousRichTextObject)
		nextFrame: the parent frame that text will continue into
		previousRichTextObject: the previous RichTextObject that is being overflown from.
		
		returns: richTextObject
	
			
RichText Object: (returned by constructor)

	RichTextObject:Animate(doYield = false)
		Will run the animation. If doYield is true, the thread will yield until the animation is complete. Else, it will wrap the animation function in a coroutine
		
	RichTextObject:Show(finishAnimation = false)
		Shows the entirety of the text body. Will interrupt and stop the animation if it's running. if finishAnimation is true, the remaining text will animate in instead of appearing instantly.
		
	RichTextObject:Hide()
		Hides the text body. Will interrupt and stop the animation if it's running. The animation can be replayed after hiding.
		
	
	Vector2 RichTextObject.ContentSize
		Content size in pixels
		
	Boolean RichTextObject.Overflown
		If allowOverflow was false, this value shows if the text is overflown or if it fit in the frame. If overflown, use RichText:ContinueOverflow to continue into a new frame.
		


___________________________________________________________________________________________________________________

USAGE:

The text supplied in the constructor can be any text string. Insert a markup modifier by including <MarkupKey=MarkupValue>. No spaces.

	Examples of what this looks like include:
		<Font=ArialBold> --Set the font to ArialBold
		<Img=639588687> -- Insert an inline image with this ID
		<AnimateStepTime=0.4> -- Set the animate step time to 0.4 seconds.
		<AnimateYield=1> -- Yield for one second at this point in the animation
		<TextColor3=1,0,0> -- Set text color to red
		<Color=Red> -- Equivalent to above. The shortcut for the property name is defined in the propertyShortcuts table, and the color shortcut is defined in the colors table.
		
	After you set any markup value, you can revert it back to default later by setting it to "/". For example:
		<Font=/>
		<AnimateStepTime=/>
		<Color=/>
		
	Default values are defined by values in the "default" table below, or by values supplied in the startingProperties dictionary when the object is constructed.

Currently does not support escapement characters for < and >, so you can't use these characters in the text string.


To when using RichText:ContinueOverflow, calling Animate(), Show(), or Hide() on the initial RichText object will pass this call onto subsequent overflown rich text objects, so
only a call to the first object is neccessary. See example.

___________________________________________________________________________________________________________________

Example code:

	local richText = require(richTextModule)
	local text = "Hello world!\nLine two! <AnimateDelay=1><Img=Thinking>"
	local textObject = richText:New(frame, text)
	textObject:Animate(true)
	print("Animation done!")


Example string 1: Basic

	local text = "<Font=SourceSansBold><TextScale=0.3>Oh!<TextScale=/><Font=/><AnimateYield=1> I didn't see you there<AnimateStepFrequency=1><AnimateStepTime=0.4> . . .<AnimateStepFrequency=/><AnimateStepTime=/>\n I wasn't expecting <Color=255,0,0>you<Color=/>. Please forgive the state of my room.<AnimateYield=1><Img=639588687>"
	
	--This yields this result: https://twitter.com/Defaultio/status/903094769617747968


Example string 2: Wind Waker

	Insert the WindWakerExample ScreenGui in this module into StarterGui.
	Insert this module into WindWakerExample.
	Ensure WindWakerExample.LocalText is not Disabled.
	
	-- This yields this result: https://twitter.com/Defaultio/status/903138250054709248
	
	
Example string 3: Text-in animations

	local text = "This text is about to be <Color=Green><AnimateStyle=Wiggle><AnimateStepFrequency=1><AnimateStyleTime=2>wiggly<AnimateStyle=/><AnimateStepFrequency=/><AnimateStyleTime=/><Color=/>!<AnimateYield=1.5>\nIt can also be <Color=Red><AnimateStyle=Fade><AnimateStepFrequency=1><AnimateStyleTime=0.5>fadey fadey<AnimateStyle=/><AnimateStepFrequency=/><AnimateStyleTime=/><Color=/>!<AnimateYield=1>\n<AnimateStyle=Rainbow><AnimateStyleTime=2>Or rainbow!!! :O<AnimateStyle=/><AnimateStyleTime=/><AnimateYield=1>\n<AnimateStyle=Swing><AnimateStyleTime=3>Make custom animations!"
	
	-- This yields this result: https://twitter.com/Defaultio/status/903346975688425472
	
	
Example string 4: Variable text justification per line

	local text = "Have you ever <Color=Red>thought<Color=/><AnimateStepFrequency=1><AnimateStepTime=0.4> . . .<AnimateStepFrequency=/><AnimateStepTime=/><AnimateYield=1><ContainerHorizontalAlignment=Center>\n<TextScale=0.5><AnimateStyle=Rainbow><AnimateStyleTime=2.5><Img=Thinking><AnimateStyle=/><TextScale=/><AnimateYield=3><ContainerHorizontalAlignment=Right>\n<Color=Green><AnimateStyle=Spin><AnimateStyleTime=1.5>Wow<AnimateStyle=/><Color=/>!"

	-- This yields this result: https://twitter.com/Defaultio/status/903381787467956224

Example 5: Overflowing

	Insert the OverflowingExample ScreenGui in this module into StarterGui.
	Inert this module into the OverflowingExample ScreenGui.
	Ensure OverflowingExample.LocalText is not disabled.
	
	-- This yields this result: https://twitter.com/Defaultio/status/918619989107621888

___________________________________________________________________________________________________________________	
	
--]]

local richText = {}

--------- SHORTCUTS ---------

-- Color shortcuts: you can use these strings instead of full property names
local propertyShortcuts = {}
propertyShortcuts.Color = "TextColor3"
propertyShortcuts.StrokeColor = "TextStrokeColor3"
propertyShortcuts.ImageColor = "ImageColor3"

-- Color shortcuts: you can use these strings instead of defining exact color values
richText.ColorShortcuts = {}
richText.ColorShortcuts.White = Color3.new(1, 1, 1)
richText.ColorShortcuts.Black = Color3.new(0, 0, 0)
richText.ColorShortcuts.Red = Color3.new(1, 0.4, 0.4)
richText.ColorShortcuts.Green = Color3.new(0.4, 1, 0.4)
richText.ColorShortcuts.Blue = Color3.new(0.4, 0.4, 1)
richText.ColorShortcuts.Cyan = Color3.new(0.4, 0.85, 1)
richText.ColorShortcuts.Orange = Color3.new(1, 0.5, 0.2)
richText.ColorShortcuts.Yellow = Color3.new(1, 0.9, 0.2)

-- Image shortcuts: you can use these string instead of using image ids
richText.ImageShortcuts = {}
richText.ImageShortcuts.Eggplant = 639588687
richText.ImageShortcuts.Thinking = 955646496
richText.ImageShortcuts.Sad = 947900188
richText.ImageShortcuts.Happy = 414889555
richText.ImageShortcuts.Despicable = 711674643

--------- DEFAULTS ---------

local defaults = {}

--Text alignment default properties
defaults.ContainerHorizontalAlignment = "Left" -- Align,ent of text within frame container
defaults.ContainerVerticalAlignment = "Center" 
defaults.TextYAlignment = "Bottom" -- Alignment of the text on the line, only makes a difference if the line has variable text sizes

-- Text size default properties
defaults.TextScaled = true
defaults.TextScaleRelativeTo = "Frame" -- "Frame" or "Screen" If Frame, will scale relative to vertical size of the parent frame. If Screen, will scale relative to vertical size of the ScreenGui.
defaults.TextScale = 0.25 -- If you want the frame to have a nominal count of n lines of text, make this value 1 / n. For four lines, 1 / 4 = 0.25.
defaults.TextSize = 20 -- Only applicable if TextScaled = false

-- TextLabel default properties
defaults.Font = "SourceSans"
defaults.TextColor3 = "White"
defaults.TextStrokeColor3 = "Black"
defaults.TextTransparency = 0
defaults.TextStrokeTransparency = 1
defaults.BackgroundTransparency = 1
defaults.BorderSizePixel = 0

-- Image label default properties
defaults.ImageColor3 = "White"
defaults.ImageTransparency = 0
defaults.ImageRectOffset = "0,0"
defaults.ImageRectSize = "0,0"

-- Text animation default properties
	-- character appearance timing:
defaults.AnimateStepTime = 0 -- Seconds between newframes
defaults.AnimateStepGrouping = "Letter" -- "Word" or "Letter" or "All"
defaults.AnimateStepFrequency = 4 -- How often to step, 1 is all, 2 is step in pairs, 3 is every three, etc.
	-- yielding:
defaults.AnimateYield = 0 -- Set this markup to yield
	-- entrance style parameters:
defaults.AnimateStyle = "Appear"
defaults.AnimateStyleTime = 0.5 -- How long it takes for an entrance style to fully execute
defaults.AnimateStyleNumPeriods = 3 -- Used differently for each entrance style
defaults.AnimateStyleAmplitude = 0.5 -- Used differently for each entrance style


--------- ENTRANCE ANIMATION FUNCTIONS ---------

-- These are functions responsible for animating how text enters. The functions are passed:
	-- characters: A list of the characters to be animated.
	-- animateAlpha: A value of 0 - 1 that represents the lifetime of the animation
	-- properties: A dictionary of all the properties at that character, including InitialSize and InitialPosition
	
local animationStyles = {}

function animationStyles.Appear(character)
	character.Visible = true
end

function animationStyles.Fade(character, animateAlpha, properties)
	character.Visible = true
	if character:IsA("TextLabel") then
		character.TextTransparency = 1 - (animateAlpha * (1 - properties.TextTransparency))
	elseif character:IsA("ImageLabel") then
		character.ImageTransparency = 1 - (animateAlpha * (1 - properties.ImageTransparency))
	end
end

function animationStyles.Wiggle(character, animateAlpha, properties)
	character.Visible = true
	local amplitude = properties.InitialSize.Y.Offset * (1 - animateAlpha) * properties.AnimateStyleAmplitude
	character.Position = properties.InitialPosition + UDim2.new(0, 0, 0, math.sin(animateAlpha * math.pi * 2 * properties.AnimateStyleNumPeriods) * amplitude / 2)
end

function animationStyles.Swing(character, animateAlpha, properties)
	character.Visible = true
	local amplitude = 90 * (1 - animateAlpha) * properties.AnimateStyleAmplitude
	character.Rotation = math.sin(animateAlpha * math.pi * 2 * properties.AnimateStyleNumPeriods) * amplitude
end

function animationStyles.Spin(character, animateAlpha, properties)
	character.Visible = true
	character.Position = properties.InitialPosition + UDim2.new(0, properties.InitialSize.X.Offset / 2, 0, properties.InitialSize.Y.Offset / 2)
	character.AnchorPoint = Vector2.new(0.5, 0.5)
	character.Rotation = animateAlpha * properties.AnimateStyleNumPeriods * 360
end

function animationStyles.Rainbow(character, animateAlpha, properties)
	character.Visible = true
	local rainbowColor = Color3.fromHSV(animateAlpha * properties.AnimateStyleNumPeriods % 1, 1, 1)
	if character:IsA("TextLabel") then
		local initialColor = getColorFromString(properties.TextColor3)
		character.TextColor3 = Color3.new(rainbowColor.r + animateAlpha * (initialColor.r - rainbowColor.r), rainbowColor.g + animateAlpha * (initialColor.g - rainbowColor.g), rainbowColor.b + animateAlpha * (initialColor.b - rainbowColor.b))
	else
		local initialColor = getColorFromString(properties.ImageColor3)
		character.ImageColor3 = Color3.new(rainbowColor.r + animateAlpha * (initialColor.r - rainbowColor.r), rainbowColor.g + animateAlpha * (initialColor.g - rainbowColor.g), rainbowColor.b + animateAlpha * (initialColor.b - rainbowColor.b))
	end
end


--------- MODULE BEGIN ---------

local textService = game:GetService("TextService")
local runService = game:GetService("RunService")
local animationCount = 0

function getLayerCollector(frame)
	if not frame then
		return nil
	elseif frame:IsA("LayerCollector") then
		return frame
	elseif frame and frame.Parent then
		return getLayerCollector(frame.Parent)
	else
		return nil
	end
end

function shallowCopy(tab)
	local ret = {}
	for key, value in pairs(tab) do
		ret[key] = value
	end
	return ret
end

function getColorFromString(value)
	if richText.ColorShortcuts[value] then
		 return richText.ColorShortcuts[value]
	else
		local r, g, b = value:match("(%d+),(%d+),(%d+)")
		return Color3.new(r / 255, g / 255, b / 255)
	end
end

function getVector2FromString(value)
	local x, y = value:match("(%d+),(%d+)")
	return Vector2.new(x, y)
end

function setHorizontalAlignment(frame, alignment)
	if alignment == "Left" then
		frame.AnchorPoint = Vector2.new(0, 0)
		frame.Position = UDim2.new(0, 0, 0, 0)
	elseif alignment == "Center" then
		frame.AnchorPoint = Vector2.new(0.5, 0)
		frame.Position = UDim2.new(0.5, 0, 0, 0)
	elseif alignment == "Right" then
		frame.AnchorPoint = Vector2.new(1, 0)
		frame.Position = UDim2.new(1, 0, 0, 0)
	end
end

function richText:New(frame, text, startingProperties, allowOverflow, prevTextObject)
	for _, v in pairs(frame:GetChildren()) do
		v:Destroy()
	end
	if allowOverflow == nil then
		allowOverflow = true
	end
	
	local properties = {}
	local defaultProperties = {}
	if prevTextObject then
		text = prevTextObject.Text
		startingProperties = prevTextObject.StartingProperties
	end
	
	local lineFrames = {}
	local textFrames = {}
	local frameProperties = {}
	local linePosition = 0
	local overflown = false
	local textLabel = Instance.new("TextLabel")
	local imageLabel = Instance.new("ImageLabel")
	local layerCollector = getLayerCollector(frame)
	textLabel.AutoLocalize = false
	
	local applyProperty, applyMarkup, formatLabel, printText, printImage, printSeries
	
	----- Apply properties / markups -----
	function applyMarkup(key, value)
		key = propertyShortcuts[key] or key
		if value == "/" then
			if defaultProperties[key] then
				value = defaultProperties[key]
			else
				warn("Attempt to default <"..key.."> to value with no default")
			end
		end
		if tonumber(value) then
			value = tonumber(value)
		elseif value == "false" or value == "true" then
			value = value == "true"
		end
		properties[key] = value
		
		if applyProperty(key, value) then
			-- Ok
		elseif key == "ContainerHorizontalAlignment" and lineFrames[#lineFrames] then
			setHorizontalAlignment(lineFrames[#lineFrames].Container, value)
		elseif defaults[key] then
			-- Ok
		elseif key == "Img" then
			printImage(value)
		else
			-- Unknown value
			return false	
		end
		return true
	end
	
	function applyProperty(name, value, frame)
		local propertyType
		local ret = false
		for _, label in pairs(frame and {frame} or {textLabel, imageLabel}) do
			local isProperty = pcall(function() propertyType = typeof(label[name]) end) -- is there a better way to check if it's a property?
			if isProperty then
				if propertyType == "Color3" then
					label[name] = getColorFromString(value)
				elseif propertyType == "Vector2" then
					label[name] = getVector2FromString(value)
				else
					label[name] = value	
				end
				ret = true	
			end
		end
		return ret
	end
	
	----- Set up default properties -----
	for name, value in pairs(defaults) do
		applyMarkup(name, value)
		defaultProperties[propertyShortcuts[name] or name] = properties[propertyShortcuts[name] or name]
	end
	for name, value in pairs(startingProperties or {}) do
		applyMarkup(name, value)
		defaultProperties[propertyShortcuts[name] or name] = properties[propertyShortcuts[name] or name]
	end
	
	if prevTextObject then
		properties = prevTextObject.OverflowPickupProperties
		for name, value in pairs(properties) do
			applyMarkup(name, value)
		end
	end
	
	----- Get vertical size -----
	local function getTextSize()
		if properties.TextScaled == true then
			local relativeHeight
			if properties.TextScaleRelativeTo == "Screen" then
				relativeHeight = layerCollector.AbsoluteSize.Y
			elseif properties.TextScaleRelativeTo == "Frame" then
				relativeHeight = frame.AbsoluteSize.Y
			end
			return math.min(properties.TextScale * relativeHeight, 100)
		else
			return properties.TextSize
		end
	end
	
	----- Lines -----
	local contentHeight = 0
	local function newLine()
		local lastLineFrame = lineFrames[#lineFrames]
		if lastLineFrame then
			contentHeight = contentHeight + lastLineFrame.Size.Y.Offset
			if not allowOverflow and contentHeight + getTextSize() > frame.AbsoluteSize.Y then
				overflown = true
				return
			end
		end
		local lineFrame = Instance.new("Frame")
		lineFrame.Name = string.format("Line%03d", #lineFrames + 1)
		lineFrame.Size = UDim2.new(0, 0, 0, 0)
		lineFrame.BackgroundTransparency = 1		
		local textContainer = Instance.new("Frame", lineFrame)
		textContainer.Name = "Container"
		textContainer.Size = UDim2.new(0, 0, 0, 0)
		textContainer.BackgroundTransparency = 1
		setHorizontalAlignment(textContainer, properties.ContainerHorizontalAlignment)
		lineFrame.Parent = frame
		table.insert(lineFrames, lineFrame)
		textFrames[#lineFrames] = {}
		linePosition = 0
	end
	newLine()
	
	----- Label printing -----
	local function addFrameProperties(frame)
		frameProperties[frame] = shallowCopy(properties)
		frameProperties[frame].InitialSize = frame.Size
		frameProperties[frame].InitialPosition = frame.Position
		frameProperties[frame].InitialAnchorPoint = frame.AnchorPoint
	end
	
	function formatLabel(newLabel, labelHeight, labelWidth, endOfLineCallback)
		local lineFrame = lineFrames[#lineFrames]
		
		local verticalAlignment = tostring(properties.TextYAlignment)
		if verticalAlignment  == "Top" then
			newLabel.Position = UDim2.new(0, linePosition, 0, 0)
			newLabel.AnchorPoint = Vector2.new(0, 0)
		elseif verticalAlignment  == "Center" then
			newLabel.Position = UDim2.new(0, linePosition, 0.5, 0)
			newLabel.AnchorPoint = Vector2.new(0, 0.5)
		elseif verticalAlignment  == "Bottom" then
			newLabel.Position = UDim2.new(0, linePosition, 1, 0)
			newLabel.AnchorPoint = Vector2.new(0, 1)
		end
		
		linePosition = linePosition + labelWidth
		if linePosition > frame.AbsoluteSize.X and not (linePosition == labelWidth) then
			-- Newline, get rid of label and retry it on the next line
			newLabel:Destroy()
			local lastLabel = textFrames[#lineFrames][#textFrames[#lineFrames]]
			if lastLabel:IsA("TextLabel") and lastLabel.Text == " " then -- get rid of trailing space
				lineFrame.Container.Size = UDim2.new(0, linePosition - labelWidth - lastLabel.Size.X.Offset, 1, 0)
				lastLabel:Destroy()
				table.remove(textFrames[#lineFrames])
			end
			newLine()
			endOfLineCallback()
		else
			-- Label is ok
			newLabel.Size = UDim2.new(0, labelWidth, 0, labelHeight)
			lineFrame.Container.Size = UDim2.new(0, linePosition, 1, 0)
			lineFrame.Size = UDim2.new(1, 0, 0, math.max(lineFrame.Size.Y.Offset, labelHeight))
			newLabel.Name = string.format("Group%03d", #textFrames[#lineFrames] + 1)
			newLabel.Parent = lineFrame.Container
			table.insert(textFrames[#lineFrames], newLabel)
			addFrameProperties(newLabel)
			properties.AnimateYield = 0
		end
	end
	
	function printText(text)
		if text == "\n" then
			newLine()
			return
		elseif text == " " and linePosition == 0 then
			return -- no leading spaces
		end
		
		local textSize = getTextSize()
		local textWidth = textService:GetTextSize(text, textSize, textLabel.Font, Vector2.new(layerCollector.AbsoluteSize.X, textSize)).X
		
		local newTextLabel = textLabel:Clone()
		newTextLabel.TextScaled = false
		script.UITextSizeConstraint:Clone().Parent = newTextLabel
		newTextLabel.TextSize = textSize
		newTextLabel.Text = text -- This text is never actually displayed. We just use it as a reference for knowing what the group string is.
		newTextLabel.TextTransparency = 1
		newTextLabel.TextStrokeTransparency = 1
		newTextLabel.TextWrapped = false
		
		-- Keep the real text in individual frames per character:
		local charPos = 0
		local i = 1
		for first, last in utf8.graphemes(text) do
			local character = string.sub(text, first, last)
			local characterWidth = textService:GetTextSize(character, textSize, textLabel.Font, Vector2.new(layerCollector.AbsoluteSize.X, textSize)).X
			local characterLabel = textLabel:Clone()
			characterLabel.Text = character
			characterLabel.TextScaled = false
			characterLabel.TextSize = textSize
			characterLabel.Position = UDim2.new(0, charPos, 0, 0)
			characterLabel.Size = UDim2.new(0, characterWidth + 1, 0, textSize)
			characterLabel.Name = string.format("Char%03d", i)
			characterLabel.Parent = newTextLabel
			characterLabel.Visible = false
			addFrameProperties(characterLabel)
			charPos = charPos + characterWidth
			i = i + 1
		end

		formatLabel(newTextLabel, textSize, textWidth, function() if not overflown then printText(text) end end)
	end
	
	function printImage(imageId)
		local imageHeight = getTextSize()
		local imageWidth = imageHeight -- Would be nice if we could get aspect ratio of image to get width properly.
		
		local newImageLabel = imageLabel:Clone()
		
		if richText.ImageShortcuts[imageId] then
			newImageLabel.Image = typeof(richText.ImageShortcuts[imageId]) == "number" and "rbxassetid://"..richText.ImageShortcuts[imageId] or richText.ImageShortcuts[imageId]
		else
			newImageLabel.Image = "rbxassetid://"..imageId
		end
		newImageLabel.Size = UDim2.new(0, imageHeight, 0, imageWidth)
		newImageLabel.Visible = false

		formatLabel(newImageLabel, imageHeight, imageWidth, function() if not overflown then printImage(imageId) end end)
	end
	
	function printSeries(labelSeries)	
		for _, t in pairs(labelSeries) do
			local markupKey, markupValue = string.match(t, "<(.+)=(.+)>")
			if markupKey and markupValue then
				if not applyMarkup(markupKey, markupValue) then
					warn("Could not apply markup: ", t)
				end			
			else
				printText(t)
			end
		end	
	end
	
	----- Text traversal + parsing -----
	local overflowText
	local textPos = 1
	local textLength = #text
	local labelSeries = {}
	
	if prevTextObject then
		textPos = prevTextObject.OverflowPickupIndex
	end
	
	while textPos and textPos <= textLength do
		local nextMarkupStart, nextMarkupEnd = string.find(text, "<.->", textPos)
		local nextSpaceStart, nextSpaceEnd = string.find(text, "[ \t\n]", textPos)
		
		local nextBreakStart, nextBreakEnd, breakIsWhitespace
		if nextMarkupStart and nextMarkupEnd and (not nextSpaceStart or nextMarkupStart < nextSpaceStart) then
			nextBreakStart, nextBreakEnd = nextMarkupStart, nextMarkupEnd
		else
			nextBreakStart, nextBreakEnd = nextSpaceStart or textLength + 1, nextSpaceEnd or textLength + 1
			breakIsWhitespace = true
		end
		
		local nextWord = nextBreakStart > textPos and string.sub(text, textPos, nextBreakStart - 1) or nil
		local nextBreak = nextBreakStart <= textLength and string.sub(text, nextBreakStart, nextBreakEnd) or nil
		table.insert(labelSeries, nextWord)
		
		if breakIsWhitespace then
			printSeries(labelSeries)
			if overflown then
				break
			end
			printSeries({nextBreak})
			if overflown then
				textPos = nextBreakStart
				break
			end
			labelSeries = {}
		else
			table.insert(labelSeries, nextBreak)
		end
		
		textPos = nextBreakEnd + 1
		--textPos = utf8.offset(text, 2, nextBreakEnd)
	end
	
	if not overflown then
		printSeries(labelSeries)
	end

	----- Alignment layout -----
	local listLayout = Instance.new("UIListLayout")
	listLayout.HorizontalAlignment = properties.ContainerHorizontalAlignment
	listLayout.VerticalAlignment = properties.ContainerVerticalAlignment
	listLayout.Parent = frame
	
	----- Calculate content size -----
	local contentHeight = 0
	local contentLeft = frame.AbsoluteSize.X
	local contentRight = 0
	for _, lineFrame in pairs(lineFrames) do
		contentHeight = contentHeight + lineFrame.Size.Y.Offset
		local container = lineFrame.Container
		local left, right
		if container.AnchorPoint.X == 0 then
			left = container.Position.X.Offset
			right = container.Size.X.Offset
		elseif container.AnchorPoint.X == 0.5 then
			left = lineFrame.AbsoluteSize.X / 2 - container.Size.X.Offset / 2
			right = lineFrame.AbsoluteSize.X / 2 + container.Size.X.Offset / 2
		elseif container.AnchorPoint.X == 1 then
			left = lineFrame.AbsoluteSize.X - container.Size.X.Offset
			right = lineFrame.AbsoluteSize.X
		end
		contentLeft = math.min(contentLeft, left)
		contentRight = math.max(contentRight, right)
	end
	
	----- Animation -----
	animationCount = animationCount + 1
	local animationDone = false
	local allTextReached = false
	local overrideYield = false
	local animationRenderstepBinding = "TextAnimation"..animationCount
	local animateQueue = {}
	
	local function updateAnimations()
		if allTextReached and #animateQueue == 0 or animationDone then
			animationDone = true
			runService:UnbindFromRenderStep(animationRenderstepBinding)
			animateQueue = {}
			return
		end

		local t = tick()
		for i = #animateQueue, 1, -1 do
			local set = animateQueue[i]
			local properties = set.Settings
			local animateStyle = animationStyles[properties.AnimateStyle]
			if not animateStyle then
				warn("No animation style found for: ", properties.AnimateStyle, ", defaulting to Appear")
				animateStyle = animationStyles.Appear
			end
			local animateAlpha = math.min((t - set.Start) / properties.AnimateStyleTime, 1)
			animateStyle(set.Char, animateAlpha, properties) 
			if animateAlpha >= 1 then
				table.remove(animateQueue, i)
			end
		end
	end
	
	local function setFrameToDefault(frame)
		frame.Position = frameProperties[frame].InitialPosition
		frame.Size = frameProperties[frame].InitialSize
		frame.AnchorPoint = frameProperties[frame].InitialAnchorPoint
		for name, value in pairs(frameProperties[frame]) do
			applyProperty(name, value, frame)
		end
	end

	local function setGroupVisible(frame, visible)
		frame.Visible = visible
		for _, v in pairs(frame:GetChildren()) do
			if not v:IsA("UITextSizeConstraint") then
				v.Visible = visible
				if visible then
					setFrameToDefault(v)
				end
			end
		end
		if visible and frame:IsA("ImageLabel") then
			setFrameToDefault(frame)
		end
	end

	local function animate(waitForAnimationToFinish)
		animationDone = false
		runService:BindToRenderStep(animationRenderstepBinding, Enum.RenderPriority.Last.Value, updateAnimations)

		local stepGrouping
		local stepTime
		local stepFrequency
		local numAnimated
		
		-- Make everything invisible to start
		for lineNum, list in pairs(textFrames) do
			for _, frame in pairs(list) do
				setGroupVisible(frame, false)
			end
		end
	
		local function animateCharacter(char, properties)
			table.insert(animateQueue, {Char = char, Settings = properties, Start = tick()})
		end
		
		local function yield()
			if not overrideYield and numAnimated % stepFrequency == 0 and stepTime >= 0 then
				local yieldTime = stepTime > 0 and stepTime or nil
				wait(yieldTime)
			end
		end
		
		for lineNum, list in pairs(textFrames) do
			for _, frame in pairs(list) do
				local properties = frameProperties[frame]
				if not (properties.AnimateStepGrouping  == stepGrouping) or not (properties.AnimateStepFrequency == stepFrequency) then
					numAnimated = 0
				end
				stepGrouping = properties.AnimateStepGrouping
				stepTime = properties.AnimateStepTime
				stepFrequency = properties.AnimateStepFrequency
			
				if properties.AnimateYield > 0 then
					wait(properties.AnimateYield)
				end

				if stepGrouping == "Word" or stepGrouping == "All" then
					--if not (frame:IsA("TextLabel") and (frame.Text == " ")) then
						if frame:IsA("TextLabel") then
							frame.Visible = true
							for _, v in pairs(frame:GetChildren()) do
								animateCharacter(v, frameProperties[v])
							end
						else
							animateCharacter(frame, properties)
						end
					if stepGrouping == "Word" then
						script:FindFirstChildOfClass("BindableEvent"):Fire("rbxassetid://3620844678",4.5)
							numAnimated = numAnimated + 1
							yield()
						end
					--end
				elseif stepGrouping == "Letter" then
					if frame:IsA("TextLabel") --[[and not (frame.Text == " ") ]]then
						frame.Visible = true
						local text = frame.Text
						local i = 1
						while true do
							local v = frame:FindFirstChild(string.format("Char%03d", i))
							if not v then
								break
							end
							animateCharacter(v, frameProperties[v])
							numAnimated = numAnimated + 1
							script:FindFirstChildOfClass("BindableEvent"):Fire("rbxassetid://3620844678",4.5)
							yield()
							if animationDone then
								return
							end
							i = i + 1
						end
					else
						animateCharacter(frame, properties)
						numAnimated = numAnimated + 1
						yield()
					end
				else
					warn("Invalid step grouping: ", stepGrouping)
				end
				
				if animationDone then
					return
				end
			end
		end
			
		allTextReached = true
		
		if waitForAnimationToFinish then
			while #animateQueue > 0 do
				runService.RenderStepped:Wait()
			end
		end	
	end
	


	local textObject = {}
	
	----- Overflowing -----
	
	textObject.Overflown = overflown
	textObject.OverflowPickupIndex = textPos
	textObject.StartingProperties = startingProperties
	textObject.OverflowPickupProperties = properties
	textObject.Text = text

	if prevTextObject then
		prevTextObject.NextTextObject = textObject
	end
	
	-- to overflow: check if textObject.Overflown, then use richText:ContinueOverflow(newFrame, textObject) to continue to another frame.
	
	
	----- Return object API -----

	textObject.ContentSize = Vector2.new(contentRight - contentLeft, contentHeight)

	function textObject:Animate(yield)
		if yield then
			animate()
		else
			coroutine.wrap(animate)()
		end
		if self.NextTextObject then
			self.NextTextObject:Animate(yield)
		end
	end
	
	function textObject:Show(finishAnimation)
		if finishAnimation then
			overrideYield = true
		else
			animationDone = true
			for lineNum, list in pairs(textFrames) do
				for _, frame in pairs(list) do
					setGroupVisible(frame, true)
				end
			end
		end
		if self.NextTextObject then
			self.NextTextObject:Show(finishAnimation)
		end
	end
	
	function textObject:Hide()
		animationDone = true
		for lineNum, list in pairs(textFrames) do
			for _, frame in pairs(list) do
				setGroupVisible(frame, false)
			end
		end
		if self.NextTextObject then
			self.NextTextObject:Hide()
		end
	end
	
	return textObject
end


function richText:ContinueOverflow(newFrame, prevTextObject)
	return richText:New(newFrame, nil, nil, false, prevTextObject)
end


return richText
]]></ProtectedString>
						<int64 name="SourceAssetId">1014847041</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ScreenGui" referent="RBX30007E015FBF41EB90131570F85F8B7B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipToDeviceSafeArea">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<int name="DisplayOrder">0</int>
							<bool name="Enabled">false</bool>
							<string name="Name">OverflowingExample</string>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SafeAreaCompatibility">1</token>
							<token name="ScreenInsets">2</token>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<token name="ZIndexBehavior">0</token>
						</Properties>
						<Item class="LocalScript" referent="RBX2CE9CAFB15964F9CBF9A013314C7AACE">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LocalText</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{60B5090E-65D9-4C5B-99BB-48FE58959350}</string>
								<ProtectedString name="Source"><![CDATA[wait(0.2)


local richText = require(script.Parent:FindFirstChild("RichText") or script.Parent.Parent)
script.Parent.Enabled = true

local text = "He thinks about walking at night to avoid the heat and sun, but based upon how dark it actually was the night before, and given that he has no flashlight, he's afraid that he'll break a leg or step on a rattlesnake. <Color=Yellow>So, he puts on some sun block, puts the rest in his pocket for reapplication later, <Color=/>brings an umbrella he'd had in the back of the SUV with him to give him a little shade, pours the windshield wiper fluid into his water bottle in case he gets that desperate, brings his pocket knife in case he finds a cactus that looks like it might have water in it, and heads out in the direction he thinks is right."
local textFrames = {script.Parent.Frame.TextBox1, script.Parent.Frame.TextBox2, script.Parent.Frame.TextBox3}

local initialTextObject = richText:New(textFrames[1], text, {ContainerVerticalAlignment = "Top"}, false)
local latestTextObject = initialTextObject

for i = 2, #textFrames do
	if latestTextObject.Overflown then
		latestTextObject = richText:ContinueOverflow(textFrames[i], latestTextObject)
	end
end

initialTextObject:Animate(true)
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX307C258AFEDD4CC3850B06E082597BD8">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.737254918</R>
									<G>0.627451003</G>
									<B>0.517647088</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Frame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX23B45308E6A143438C6383CA93BD160B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>1</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0.800000012</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://110562548</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.474999994</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX055B96B5BDD14E6CA5406C1F452B11BC">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">TextBox1</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX74011915F5454753A048903DD6AC1E21">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">TextBox2</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXB791E9A1B5FD4A84B33E30FEB71A078A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">TextBox3</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.666999996</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="UIPadding" referent="RBX921FAC3991294AAB94B401B6111EEFBD">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UIPadding</string>
									<UDim name="PaddingBottom">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingLeft">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingRight">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingTop">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ScreenGui" referent="RBX01DA5A42834546979A0575F2939B1BB4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipToDeviceSafeArea">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<int name="DisplayOrder">0</int>
							<bool name="Enabled">false</bool>
							<string name="Name">WindWakerExample</string>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SafeAreaCompatibility">1</token>
							<token name="ScreenInsets">2</token>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<token name="ZIndexBehavior">0</token>
						</Properties>
						<Item class="ImageLabel" referent="RBXF5F56EDC45184C93A96D2D32C56554C3">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://1014927013</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Dialogue</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.850000024</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0.25</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">2</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX367EBEF6EC2345BA9E3505CE7571CEF6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.211764723</R>
										<G>0.211764723</G>
										<B>0.211764723</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">TextFrame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXB930F8DADE4647158AFAE8783612D182">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://1014927001</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Button</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>1.14999998</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">2</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="UIPadding" referent="RBXEE4ABB48ED094395A8EF155659E667C2">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UIPadding</string>
									<UDim name="PaddingBottom">
										<S>0.200000003</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingLeft">
										<S>0.100000001</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingRight">
										<S>0.100000001</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingTop">
										<S>0.200000003</S>
										<O>0</O>
									</UDim>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="LocalScript" referent="RBXE03D8808864D4D4EBF4473CC51EA0A26">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LocalText</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{F8F650B9-3CE5-487D-8287-83C2CC85EE03}</string>
								<ProtectedString name="Source"><![CDATA[-- Rich text Wind Waker example: -- https://youtu.be/CY3ghdwL9W4?t=4m34s	https://twitter.com/Defaultio/status/903138250054709248

-- Make sure the RichText module is parented to this ScreenGui

local richText = require(script.Parent:FindFirstChild("RichText") or script.Parent.Parent)
script.Parent.Enabled = true
local tweenService = game:GetService("TweenService")
local dialogueFrame = script.Parent.Dialogue
local textFrame = dialogueFrame.TextFrame
local buttonA = dialogueFrame.Button
dialogueFrame.Visible = false
buttonA.Visible = false

local buttonFadeIn = tweenService:Create(buttonA, TweenInfo.new(0.1), {ImageTransparency = 0})
local buttonFadeOut = tweenService:Create(buttonA, TweenInfo.new(0.1), {ImageTransparency = 1})
local buttonClickTween = tweenService:Create(buttonA, TweenInfo.new(0.05, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {Size = UDim2.new(0.25, 0, 0.25, 0)})
local frameFadeIn = tweenService:Create(dialogueFrame, TweenInfo.new(0.4), {Size = dialogueFrame.Size, ImageTransparency = 0})
local frameFadeOut = tweenService:Create(dialogueFrame, TweenInfo.new(0.4), {ImageTransparency = 1})


local function showButton()
	buttonA.Size = UDim2.new(0.3, 0, 0.3, 0)
	buttonA.Visible = true
	buttonFadeIn:Play()
	wait(buttonFadeIn.TweenInfo.Time)
end

local function clickButton()
	buttonClickTween:Play()
	wait(buttonClickTween.TweenInfo.Time)
	buttonFadeOut:Play()
	wait(buttonFadeOut.TweenInfo.Time)
	buttonA.Visible = false
end

local function showFrame()
	dialogueFrame.Size = UDim2.new(0.4, 0, 0.1, 0)
	dialogueFrame.ImageTransparency = 1
	dialogueFrame.Visible = true
	frameFadeIn:Play()
	wait(frameFadeIn.TweenInfo.Time)
end

local function hideFrame()
	frameFadeOut:Play()
	wait(frameFadeOut.TweenInfo.Time)
	dialogueFrame.Visible = false
end

local function showDialogue(text, delayTime)
	local textObject = richText:New(textFrame, text, {Font = "Cartoon"})--, AnimateStyle = "Wiggle", AnimateStepFrequency = 1, AnimateStyleTime = 7, AnimateStyleNumPeriods = 10})
	textObject:Animate(true)
	showButton()
	wait(delayTime)
	clickButton()
	textObject:Hide()
end




local textSequence = {{Text = "I just saw a <Color=Red>wild<Color=/>...a <AnimateStyle=Wiggle><Color=Red>wild pig🐷<Color=/>!<AnimateYield=1><AnimateStyle=/>\nOoh! See? Look! That black one there...<AnimateYield=1>\nDon't you see him?", Delay = 1.5},
					{Text = "<AnimateYield=0.3>This is perfect! My wife was just telling me how she really wanted a pet...", Delay = 2.7},
					{Text = "You ready to go grab it, Link?<AnimateYield=0.3>\n Now, you can't just run up on it!\nPigs are too alert to their surroundings for you to just jog up and capture one.", Delay = 3.5},
					{Text = "If you want to get close to one, you have to hold <Img=1014975764> to crouch and tilt <Img=1014975761> to crawl slowly up behind it. <AnimateYield=1.5>Slow<AnimateYield=1>ly...", Delay = 3},
					{Text = "You could also distract it with bait, I guess.", Delay = 1.5},
}


--This is the animation example:
--local textSequence = {{Text = "This text is about to be <Color=Green><AnimateStyle=Wiggle><AnimateStepFrequency=1><AnimateStyleTime=2>wiggly<AnimateStyle=/><AnimateStepFrequency=/><AnimateStyleTime=/><Color=/>!<AnimateYield=1.5>\nIt can also be <Color=Red><AnimateStyle=Fade><AnimateStepFrequency=1><AnimateStyleTime=0.5>fadey <Img=Eggplant>fadey<AnimateStyle=/><AnimateStepFrequency=/><AnimateStyleTime=/><Color=/>!<AnimateYield=1>\n<AnimateStyle=Rainbow><AnimateStyleTime=2>Or rainbow!!! :O<Img=Thinking><AnimateStyle=/><AnimateStyleTime=/><AnimateYield=1>\n<AnimateStyle=Swing><AnimateStyleTime=3>Make custom animations! <Img=Eggplant>", Delay = 10}}

--This is a text justification example:
--local textSequence = {{Text = "Have you ever <Color=Red>thought<Color=/><AnimateStepFrequency=1><AnimateStepTime=0.4> . . .<AnimateStepFrequency=/><AnimateStepTime=/><AnimateYield=1><ContainerHorizontalAlignment=Center>\n<TextScale=0.5><AnimateStyle=Rainbow><AnimateStyleTime=2.5><Img=Thinking><AnimateStyle=/><TextScale=/><AnimateYield=3><ContainerHorizontalAlignment=Right>\n<Color=Green><AnimateStyle=Spin><AnimateStyleTime=1.5>Wow<AnimateStyle=/><Color=/>!", Delay = 10}}

wait(2)

showFrame()
for _, v in pairs(textSequence) do
	showDialogue(v.Text, v.Delay)
end
hideFrame()

]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="UITextSizeConstraint" referent="RBX6CEF6AE8DF3D49FA89AACABBE85B67E9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<int name="MaxTextSize">16</int>
							<int name="MinTextSize">1</int>
							<string name="Name">UITextSizeConstraint</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="BindableEvent" referent="RBX92B555AF7963451A97C205C95EE80FA9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name"> </string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="ScreenGui" referent="RBX392F778D459C43C8AF7F3F27C0DFC0A7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipToDeviceSafeArea">true</bool>
						<bool name="DefinesCapabilities">false</bool>
						<int name="DisplayOrder">1000000001</int>
						<bool name="Enabled">true</bool>
						<string name="Name"></string>
						<bool name="ResetOnSpawn">true</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<token name="SafeAreaCompatibility">1</token>
						<token name="ScreenInsets">2</token>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<token name="ZIndexBehavior">1</token>
					</Properties>
					<Item class="ViewportFrame" referent="RBXA7BFEE19B83C4ADB93F4967323391A82">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="Ambient">
								<R>0.784313738</R>
								<G>0.784313738</G>
								<B>0.784313738</B>
							</Color3>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.333333343</R>
								<G>1</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<CoordinateFrame name="CameraCFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="CameraFieldOfView">1.22173059</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<Color3 name="LightColor">
								<R>0.549019635</R>
								<G>0.549019635</G>
								<B>0.549019635</B>
							</Color3>
							<Vector3 name="LightDirection">
								<X>-1</X>
								<Y>-1</Y>
								<Z>-1</Z>
							</Vector3>
							<string name="Name"></string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>100</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="WorldModel" referent="RBX45CB8F706B2A4DFDB7FDC9DB6C73A3D1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name"></string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>49.5</X>
										<Y>2.6916008</Y>
										<Z>-45</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXE16E62CC3E6643C086F7C443E422E755">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.639215708</R>
									<G>0.635294139</G>
									<B>0.647058845</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">881302981</int>
								<string name="Name"></string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>-0.200000003</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>151</XO>
									<YS>0</YS>
									<YO>68</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX2A5C6C4C25244D49B0E73A97B8EB3BC6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.980392158</R>
										<G>0.980392158</G>
										<B>0.980392158</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">true</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.100000001</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">1</int>
									<string name="Name">ChatBubbleFrame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIGradient" referent="RBXFDDACE74A6B54B81A7422575D1602227">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">false</bool>
										<string name="Name">Gradient</string>
										<Vector2 name="Offset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="Rotation">0</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									</Properties>
								</Item>
								<Item class="UICorner" referent="RBX6F647A57EEFC4DF99FD4DD704C5B6464">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>12</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="UIPadding" referent="RBX6FF215515AD44AE581B1F567DC4BEECF">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">Padding</string>
										<UDim name="PaddingBottom">
											<S>0</S>
											<O>8</O>
										</UDim>
										<UDim name="PaddingLeft">
											<S>0</S>
											<O>8</O>
										</UDim>
										<UDim name="PaddingRight">
											<S>0</S>
											<O>8</O>
										</UDim>
										<UDim name="PaddingTop">
											<S>0</S>
											<O>8</O>
										</UDim>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="UIListLayout" referent="RBX359F45FD46404CEDA7EA4612CAC1AAB2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="FillDirection">0</token>
										<token name="HorizontalAlignment">1</token>
										<token name="HorizontalFlex">0</token>
										<token name="ItemLineAlignment">0</token>
										<string name="Name">UIListLayout</string>
										<UDim name="Padding">
											<S>0</S>
											<O>8</O>
										</UDim>
										<token name="SortOrder">2</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<token name="VerticalAlignment">2</token>
										<token name="VerticalFlex">0</token>
										<bool name="Wraps">false</bool>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXF5492AE010F849B28A8C40F6D783713F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">false</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>0.639215708</R>
											<G>0.635294139</G>
											<B>0.647058845</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
											<Weight>500</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/GothamSSm-Medium.otf</url></CachedFaceId>
										</Font>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">2</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">true</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0.223529413</R>
											<G>0.23137255</G>
											<B>0.239215687</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">16</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0.100000001</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="UIListLayout" referent="RBX4CD45D8EA4BA4D0DB8BE1B030C235601">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">1</token>
									<token name="HorizontalAlignment">0</token>
									<token name="HorizontalFlex">0</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">Layout</string>
									<UDim name="Padding">
										<S>0</S>
										<O>-1</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<token name="VerticalAlignment">1</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX1434E2F7EA0244F093252EB35A09540F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.639215708</R>
										<G>0.635294139</G>
										<B>0.647058845</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxasset://textures/ui/InGameChat/Caret.png</url></Content>
									<Color3 name="ImageColor3">
										<R>0.980392158</R>
										<G>0.980392158</G>
										<B>0.980392158</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.100000001</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">2</int>
									<string name="Name">Caret</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>9</XO>
										<YS>0</YS>
										<YO>6</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIGradient" referent="RBXD3D72CD94E5A4EF793B4E3EACCA2D5F8">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">false</bool>
										<string name="Name">Gradient</string>
										<Vector2 name="Offset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="Rotation">0</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="UIAspectRatioConstraint" referent="RBX825FE541DAE847E1B21B79C831B4D95D">
							<Properties>
								<float name="AspectRatio">1</float>
								<token name="AspectType">0</token>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="DominantAxis">0</token>
								<string name="Name">UIAspectRatioConstraint</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<SharedStrings>
		<SharedString md5="KsLcvepHPZbNmnQdee3f9A==">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
nWC/WrThQLaIhcFwykTAKanMQLaIhcG4OPG+Y3/fQEw+e8EAAAAAtQDxQPbdccGwAunAZgMB
QZ4LMsGyd4O/+i/SQLaIhcEYNju/0JPaQLaIhcGCEMW/YAAAAAAAAAABAAAABQAAAAAAAAAF
AAAADgAAAAAAAAAOAAAACAAAAAAAAAAIAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAACwAA
AAAAAAALAAAAEQAAAAAAAAARAAAAEAAAAAAAAAAQAAAADAAAAAAAAAAMAAAABAAAAAAAAAAE
AAAAAQAAAAEAAAAEAAAABgAAAAEAAAAGAAAADwAAAAEAAAAPAAAABwAAAAEAAAAHAAAABQAA
AAIAAAAIAAAACQAAAAIAAAAJAAAAAwAAAAMAAAAJAAAACgAAAAMAAAAKAAAACwAAAAQAAAAM
AAAADQAAAAQAAAANAAAABgAAAAUAAAAHAAAADgAAAAYAAAANAAAADwAAAAcAAAAPAAAACgAA
AAcAAAAKAAAACAAAAAcAAAAIAAAADgAAAAgAAAAKAAAACQAAAAoAAAAPAAAADQAAAAoAAAAN
AAAAEAAAAAoAAAAQAAAAEQAAAAoAAAARAAAACwAAAAwAAAAQAAAADQAAABAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9IAAAABAAAAAf4BMACZwtBEHcYwbdtAcCe
CzJBvV0UwRX3+L+eCzJBEHcYwVD1778UELJAEHcYwbjm4b+eCzJBofIDwdXM9L+eCzJBB5wK
wTX3+D+eCzJBEHcYwfPlzr8UELJA0TgQwXD17z8UELJAEHcYwQT4br+eCzJBMk3twMdtAUCe
CzJBvV0UwRf4BEACZwtBEHcYwQp4OrsUELJA3/EHwTjREr+eCzJBJw/pwNjm4T+eCzJBofID
wQwz7T8UELJAYcIXwfXM9D+eCzJBB5wKwQq4OjsUELJA3/EHwQAAADYwjjBB6irkwAmYJr2e
CzJBBtLjwJWCcj+eCzJBGontwBPmzj8UELJA0TgQwaDrFz+eCzJBYl7pwInwLj2eCzJBwNnj
wIQAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAYAAAAAAAAABgAAAAsAAAAAAAAACwAAAAgAAAAA
AAAACAAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAA
AAQAAAABAAAABAAAAAkAAAABAAAACQAAAA0AAAABAAAADQAAABMAAAABAAAAEwAAABcAAAAB
AAAAFwAAABYAAAABAAAAFgAAABQAAAABAAAAFAAAAA4AAAABAAAADgAAABAAAAABAAAAEAAA
AAoAAAABAAAACgAAAAYAAAABAAAABgAAAAIAAAADAAAABwAAAAQAAAADAAAACAAAAA8AAAAD
AAAADwAAABUAAAADAAAAFQAAABEAAAADAAAAEQAAAAwAAAADAAAADAAAAAcAAAAEAAAABwAA
AAkAAAAGAAAACgAAAAsAAAAHAAAADAAAAA0AAAAHAAAADQAAAAkAAAAIAAAACwAAAA4AAAAI
AAAADgAAAA8AAAAKAAAAEAAAAAsAAAALAAAAEAAAAA4AAAAMAAAAEQAAABIAAAAMAAAAEgAA
ABMAAAAMAAAAEwAAAA0AAAAOAAAAFAAAABUAAAAOAAAAFQAAAA8AAAARAAAAFQAAABYAAAAR
AAAAFgAAABcAAAARAAAAFwAAABIAAAASAAAAFwAAABMAAAAUAAAAFgAAABUAAAAQAAAAAAAA
AAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/QgAAAAQAAAAAAAA1pDt7weQU/kCA
0fC8djl7weQU/kABuZDARkkkweQU/kAAAAA1fVJ6wao1AEEAAAA1vXImwQ5ye0Gq+DC/M2wm
wZH0e0HAEk29GjV7weQU/kCkvJHAaiUnweQU/kDK337ARkkkwX6RGEEAAAA1RkkkwUuifUEA
AAA13NNOwdMWOEGgChq/RkkkwYYOfkEGbFm/RkkkwZt7e0FC6TPAk/w4wRiTP0GvOBPAsq1w
weQU/kAyXwzAbcJxweQU/kBCKZbA9rkzweQU/kD0eGrA8D8zwW1fL0EOqB/ARkkkwYY9VEGp
UQDARkkkwY4YZkEr54jAF2hRweQU/kAfa4fA5YlSweQU/kB4AAAAAAAAAAEAAAAGAAAAAAAA
AAYAAAAPAAAAAAAAAA8AAAAOAAAAAAAAAA4AAAAVAAAAAAAAABUAAAAUAAAAAAAAABQAAAAQ
AAAAAAAAABAAAAAHAAAAAAAAAAcAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAKAAAAAAAA
AAoAAAAJAAAAAAAAAAkAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAG
AAAAAgAAAAcAAAAIAAAAAgAAAAgAAAASAAAAAgAAABIAAAATAAAAAgAAABMAAAAMAAAAAgAA
AAwAAAALAAAAAgAAAAsAAAAJAAAAAgAAAAkAAAAKAAAAAgAAAAoAAAADAAAABAAAAAkAAAAL
AAAABAAAAAsAAAAFAAAABQAAAAsAAAAMAAAABQAAAAwAAAANAAAABQAAAA0AAAAOAAAABQAA
AA4AAAAPAAAABQAAAA8AAAAGAAAABwAAABAAAAAIAAAACAAAABAAAAARAAAACAAAABEAAAAS
AAAADAAAABMAAAANAAAADQAAABMAAAARAAAADQAAABEAAAAUAAAADQAAABQAAAAVAAAADQAA
ABUAAAAOAAAAEAAAABQAAAARAAAAEQAAABMAAAASAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQ
AAAAAAAAAAAAAAAAAAAAAACAP0IAAAAEAAAAAAPePEw9e8HkFP5AAAAANfA4e8HkFP5AgAY+
PfA4e8HkFP5AKshLPzJ3JsHc2XpBAAAANddyJsEicntBA7mQQOxEJMHkFP5AAAAANWHRTsEp
GDhBljkMQAbIccHkFP5ARukzQFD7OMFJlD9BIlpwP+xEJMG5jXpBYNoyP+xEJMEIBX1BzL4e
P+xEJMFxMX1BAAAANQM5JcFgr3xBszgTQOOucMHkFP5Azt9+QOxEJMGVkRhBRCmWQHe4M8Hk
FP5AAAAANexEJMGmo31B+HhqQGw+M8HLXi9BrVEAQOxEJMEYGGZBIWuHQPGLUsHkFP5ALeeI
QBZqUcHkFP5AEqgfQOxEJMGsPFRBeAAAAAAAAAABAAAABQAAAAAAAAAFAAAADwAAAAAAAAAP
AAAAFAAAAAAAAAAUAAAAEwAAAAAAAAATAAAADQAAAAAAAAANAAAABwAAAAAAAAAHAAAAAgAA
AAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAADAAAAAEAAAAM
AAAAEAAAAAEAAAAQAAAABgAAAAEAAAAGAAAABQAAAAIAAAAHAAAAAwAAAAMAAAAIAAAACQAA
AAMAAAAJAAAACgAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAABAAAAAMAAAAH
AAAADQAAAAMAAAANAAAACAAAAAUAAAAOAAAADwAAAAUAAAAGAAAAEAAAAAUAAAAQAAAACwAA
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
ABAAAAAFAAAABAAAABEAAAAJAAAABAAAAAkAAAAIAAAABQAAABAAAAAGAAAACQAAABEAAAAM
AAAACQAAAAwAAAALAAAACQAAAAsAAAAKAAAADAAAABEAAAASAAAADAAAABIAAAATAAAADAAA
ABMAAAAUAAAADAAAABQAAAAVAAAADQAAABYAAAAOAAAADgAAABYAAAAVAAAADgAAABUAAAAU
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0UAAAAEAAAAgqQq
QAAAAAD0UXbBAADANQAAAADKvXXBAADANSjexD7uJnTBAADANULJUz/eS3LBiz3mPxojUT9x
anLBAADANZ4LskB0jVbBdijWP54LskCJeUzBtoA8QAAAAABXsXPBAADANV/Bk0Cfx1vBarWL
QAAAAAAIeBjByFNbQKQ1az8IeBjBJCwlQL9oEEAIeBjB5VD6Pwr3i0AIeBjBAADANZf7KECP
hWjBNBbwP54LskAIeBjBA13eP54LskBJsUrBxA1bQAAAAAD+8l7BBHYUQJ4LskDg6TbB0CmK
QAAAAACDgx7BDxcVQJ4LskDYvDXBKqYWQJ4LskA71CfBKq0WQJ4LskD+YCfBkuJ1QAAAAABG
rUzBfgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAA
AAAAAAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAAEAAAAAAAAAAQAAAAFgAAAAAAAAAW
AAAAEgAAAAAAAAASAAAACQAAAAAAAAAJAAAAAQAAAAEAAAAIAAAABQAAAAEAAAAFAAAADQAA
AAEAAAANAAAAAwAAAAEAAAADAAAAAgAAAAEAAAAJAAAACgAAAAEAAAAKAAAACwAAAAEAAAAL
AAAADAAAAAEAAAAMAAAACAAAAAMAAAANAAAABAAAAAQAAAANAAAABQAAAAUAAAAIAAAADAAA
AAUAAAAMAAAADgAAAAUAAAAOAAAAFQAAAAUAAAAVAAAAFAAAAAUAAAAUAAAAEwAAAAUAAAAT
AAAAEQAAAAUAAAARAAAADwAAAAUAAAAPAAAABgAAAAYAAAAPAAAABwAAAAcAAAAPAAAAEQAA
AAcAAAARAAAAEAAAAAkAAAASAAAAEwAAAAkAAAATAAAAFAAAAAkAAAAUAAAAFQAAAAkAAAAV
AAAADgAAAAkAAAAOAAAADAAAAAkAAAAMAAAACwAAAAkAAAALAAAACgAAABAAAAARAAAAFgAA
ABEAAAATAAAAEgAAABEAAAASAAAAFgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAgD9FAAAABAAAAG6yFsAUELJAcV0nwZcaFcAUELJAfrs1wXD4778UELJACHgY
wVj3BMACZwtBCHgYwYX/+L+eCzJBCHgYwai57L+eCzJBUz4nwf17FMAUELJAxuc2wZD47z8U
ELJACHgYwaX/+D+eCzJBCHgYweZDcL+eCzJBV+Y0wUsR1r8UELJA9ndMwQJU3r8UELJANbNK
wX6yFkAUELJAcV0nwWj3BEACZwtBCHgYwacaFUAUELJAfrs1wci57D+eCzJBUz4nwUMTH7+e
CzJBC9w3wQAAADYUELJAsI5WwQ18FEAUELJAxuc2wQdF3j8UELJANbNKwWsR1j8UELJA9ndM
wcmbWT+eCzJBfrs1wQAAADa/tBNBAj9CwX4AAAAAAAAAAQAAAAYAAAAAAAAABgAAAAsAAAAA
AAAACwAAAAoAAAAAAAAACgAAABEAAAAAAAAAEQAAABQAAAAAAAAAFAAAABMAAAAAAAAAEwAA
ABIAAAAAAAAAEgAAAA4AAAAAAAAADgAAAAwAAAAAAAAADAAAAAcAAAAAAAAABwAAAAIAAAAA
AAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAA
AAYAAAACAAAABwAAAA0AAAACAAAADQAAAAgAAAACAAAACAAAAAQAAAACAAAABAAAAAMAAAAE
AAAACAAAAA8AAAAEAAAADwAAABUAAAAEAAAAFQAAABAAAAAEAAAAEAAAAAkAAAAEAAAACQAA
AAUAAAAFAAAACQAAAAoAAAAFAAAACgAAAAsAAAAFAAAACwAAAAYAAAAHAAAADAAAAA0AAAAI
AAAADAAAAA4AAAAIAAAADgAAAA8AAAAIAAAADQAAAAwAAAAJAAAAEAAAAAoAAAAKAAAAEAAA
ABEAAAAOAAAAEgAAAA8AAAAPAAAAEgAAABMAAAAPAAAAEwAAABQAAAAPAAAAFAAAABUAAAAQ
AAAAFQAAABYAAAAQAAAAFgAAABEAAAARAAAAFgAAABUAAAARAAAAFQAAABQAAAAQAAAAAAAA
AAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/gQAAAAQAAAD0cyjA57yPQYo/GcEV
exnAtoiFQew1F8Fm+wzAtoiFQUsZDcHLPeG/toiFQUpgAMFpCOK/YJmSQYVeAMEgR8u/xh+k
QYL9G8Gu+M6/xkynQV9sNsHKLQrA8eacQV9sNsG62yTAI8CQQV9sNsFrIBLAtoiFQZNEJsFX
ChfA4qKJQV9sNsH0HRbAiimJQV9sNsEQ2Lu/toiFQY6u9sDqyRu/oiGaQdxD+cBg6UG/koik
QUPNDMEAAEA2jPiOQfA74MAK/ky/YgGsQaTHIsG+BlC/w7yuQV9sNsHtp/i/toiFQV9sNsHg
9Cq+toiFQaG838AyQaI+8yeeQX7F/8AAAEA2JSiqQXsWGMECLy8+toiFQf7f38CZCOI/YJmS
QYVeAMEAAEA2NgOxQeAOMsEAAEA23X+xQWsRNMFH9Ze9NI6xQV9sNsFYhvg/toiFQV9sNsHA
6UE/koikQUPNDMFq/kw/YgGsQaTHIsGG1bw/toiFQTbu9sBQR8s/xh+kQYL9G8H7PeE/toiF
QUpgAMEMdChA57yPQYo/GcGYFJo95YqxQV9sNsFgNxZAkjSJQV9sNsH0KBJAtoiFQUU/JsGB
81A/8LOuQV9sNsHe+M4/xkynQV9sNsF++wxAtoiFQUsZDcEtexlAtoiFQew1F8HvyiRAariQ
QV9sNsHiLQpA8eacQV9sNsH2AAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAE
AAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAAIAAAAAAAA
AAgAAAABAAAAAQAAAAkAAAASAAAAAQAAABIAAAAbAAAAAQAAABsAAAAkAAAAAQAAACQAAAAo
AAAAAQAAACgAAAAnAAAAAQAAACcAAAAgAAAAAQAAACAAAAAeAAAAAQAAAB4AAAAWAAAAAQAA
ABYAAAATAAAAAQAAABMAAAAMAAAAAQAAAAwAAAADAAAAAQAAAAMAAAACAAAAAQAAAAgAAAAK
AAAAAQAAAAoAAAALAAAAAQAAAAsAAAAJAAAAAwAAAAwAAAAEAAAABAAAAA0AAAAOAAAABAAA
AA4AAAAFAAAABAAAAAwAAAAPAAAABAAAAA8AAAANAAAABQAAAA4AAAAQAAAABQAAABAAAAAR
AAAABQAAABEAAAAGAAAABgAAABEAAAAaAAAABgAAABoAAAAiAAAABgAAACIAAAAlAAAABgAA
ACUAAAAmAAAABgAAACYAAAAqAAAABgAAACoAAAApAAAABgAAACkAAAAjAAAABgAAACMAAAAb
AAAABgAAABsAAAASAAAABgAAABIAAAALAAAABgAAAAsAAAAKAAAABgAAAAoAAAAIAAAABgAA
AAgAAAAHAAAACQAAAAsAAAASAAAADAAAABMAAAAPAAAADQAAABQAAAAOAAAADQAAAA8AAAAU
AAAADgAAABQAAAAVAAAADgAAABUAAAAQAAAADwAAABMAAAAWAAAADwAAABYAAAAXAAAADwAA
ABcAAAAUAAAAEAAAABUAAAAYAAAAEAAAABgAAAAZAAAAEAAAABkAAAAaAAAAEAAAABoAAAAR
AAAAFAAAABwAAAAVAAAAFAAAABcAAAAcAAAAFQAAAB0AAAAYAAAAFQAAABwAAAAdAAAAFgAA
AB4AAAAXAAAAFwAAAB8AAAAcAAAAFwAAAB4AAAAgAAAAFwAAACAAAAAhAAAAFwAAACEAAAAf
AAAAGAAAAB0AAAAZAAAAGQAAACIAAAAaAAAAGQAAAB0AAAAiAAAAGwAAACMAAAAkAAAAHAAA
AB8AAAAdAAAAHQAAACUAAAAiAAAAHQAAAB8AAAAlAAAAHwAAACYAAAAlAAAAHwAAACEAAAAm
AAAAIAAAACcAAAAhAAAAIQAAACcAAAAoAAAAIQAAACgAAAApAAAAIQAAACkAAAAqAAAAIQAA
ACoAAAAmAAAAIwAAACkAAAAoAAAAIwAAACgAAAAkAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQ
AAAAAAAAAAAAAAAAAAAAAACAP2YAAAAEAAAAVoEZwLaIhUEhNhfBg1zov58nTUEz4//AO/kM
wLaIhUFuFA3BeiQSwLaIhUHHRSbBT2cBwJ4LMkHgXBTBis30v54LMkHhngrBpz48vwAOS0F0
DN7ACtO7v7aIhUGErPbAgTXhv7aIhUGyYADBwt7hv54LMkEd8wPBuBdvv54LMkEaS+3AQQIQ
wLaIhUEi3SfBWbDsv54LMkFWOSfBSywrvraIhUGZut/A5cUSv54LMkGeEOnATVEnvZ4LMkHn
0uPA0qdBPzp/SkGtsd7A9vIPQLaIhUEi3SfBdszmv54LMkEi3SfBcosuPraIhUF74t/Aahwt
PZ4LMkFz2+PAv9IXP54LMkFhYOnA+FZyP54LMkHthu3As1zoP58nTUEz4//Aacm8P7aIhUEJ
7vbAkiQSQLaIhUEUQCbBibDsP54LMkFWOSfBMgrnP54LMkEi3SfBj8/hP54LMkEd8wPBboEZ
QLaIhUEhNhfBU/kMQLaIhUFuFA3BTibhP7aIhUGyYADBus30P54LMkHhngrBtV8BQJ4LMkHg
XBTBwAAAAAAAAAABAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAABwAAAAAAAAAHAAAADQAA
AAAAAAANAAAAEwAAAAAAAAATAAAAGAAAAAAAAAAYAAAAHwAAAAAAAAAfAAAAHgAAAAAAAAAe
AAAAHQAAAAAAAAAdAAAAGQAAAAAAAAAZAAAAEQAAAAAAAAARAAAACwAAAAAAAAALAAAAAwAA
AAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAGAAAABwAAAAEAAAAH
AAAACAAAAAEAAAAIAAAAAgAAAAEAAAAFAAAACQAAAAEAAAAJAAAACgAAAAEAAAAKAAAABgAA
AAMAAAALAAAADAAAAAMAAAAMAAAABAAAAAQAAAAMAAAAEgAAAAQAAAASAAAAGwAAAAQAAAAb
AAAAGgAAAAQAAAAaAAAAIQAAAAQAAAAhAAAAIAAAAAQAAAAgAAAAHAAAAAQAAAAcAAAAFgAA
AAQAAAAWAAAAFQAAAAQAAAAVAAAAFAAAAAQAAAAUAAAADwAAAAQAAAAPAAAADgAAAAQAAAAO
AAAACgAAAAQAAAAKAAAACQAAAAQAAAAJAAAABQAAAAYAAAANAAAABwAAAAYAAAAKAAAADgAA
AAYAAAAOAAAADwAAAAYAAAAPAAAAEAAAAAYAAAAQAAAADQAAAAsAAAARAAAAGwAAAAsAAAAb
AAAAEgAAAAsAAAASAAAADAAAAA0AAAAQAAAAEwAAAA8AAAAUAAAAEAAAABAAAAAUAAAAFQAA
ABAAAAAVAAAAFgAAABAAAAAWAAAAFwAAABAAAAAXAAAAGAAAABAAAAAYAAAAEwAAABEAAAAZ
AAAAGgAAABEAAAAaAAAAGwAAABYAAAAcAAAAFwAAABcAAAAdAAAAHgAAABcAAAAeAAAAHwAA
ABcAAAAfAAAAGAAAABcAAAAcAAAAIAAAABcAAAAgAAAAHQAAABkAAAAdAAAAIQAAABkAAAAh
AAAAGgAAAB0AAAAgAAAAIQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAgD+KAAAABAAAABzeJMChvpBBq3E2wbEeFsDWKYlBq3E2wQIuCsC155xBq3E2wbxd07/A
EKtBtslVwWT2H8AYH5JB91RewUmb+L+2iIVBq3E2wR5B/7+rH5FBnBN1wZvT6b/RWo9BORN0
wTL6zr8MTadBq3E2wYvPU7+eC7JBFT1OwTw6Tb/x66pB+cZ3wa0SzL9nLZ5BZYN2wZt0wL+2
iIVB3xFMwWtt+D+2iIVBq3E2wdTww7/JPZFBPKF6wUBF1r+tKZNByY16wTU2Jb/FQYxBdKF2
wZlCTr/MAolBc/1twZsVl7+2iIVBYPNTwTsRUL8Iva5Bq3E2wZ/GVT+o+LFB8C5OwQDA6rme
0bFBeEBpwZivl72UjbFBq3E2wXW9TD/UJKtBCOV3wQDA6rky36VBW2J8wauAwT+2iIVB9QFM
wZjw7j+MMY9BJBhzwRExFkAbNolBq3E2wdBcwD7PS4xB+zV3wSNWbL+fBo5BblR4wW8qnT/8
CpRBuv98wVnO/T5CzYhBJ/dvweLDlT62iIVBr7FgwcE57b62iIVBtv5ewepQ0z/AEKtBtslV
wS7zmD1Zi7FBq3E2wefeUD85ta5Bq3E2web9zj8MTadBq3E2wdsFzD9nLZ5BZYN2wRxqhT+2
iIVBO2pVwXDcAUAOSpFB3l5zwbjnH0BxBZJBbkZdwTFpzj+iGpJBjo96wXDPJEDwt5BBq3E2
wXAR7T+ZT5NBXjZ4wZknCkC155xBq3E2wQgBAAAAAAAAAQAAAAUAAAAAAAAABQAAAA0AAAAA
AAAADQAAABsAAAAAAAAAGwAAACsAAAAAAAAAKwAAAC0AAAAAAAAALQAAACUAAAAAAAAAJQAA
ACQAAAAAAAAAJAAAACMAAAAAAAAAIwAAABYAAAAAAAAAFgAAABMAAAAAAAAAEwAAAAgAAAAA
AAAACAAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAA
AAYAAAABAAAABgAAAAcAAAABAAAABwAAAAUAAAACAAAACAAAAAMAAAADAAAACQAAAAoAAAAD
AAAACgAAAAsAAAADAAAACwAAAAQAAAADAAAACAAAAAkAAAAEAAAACwAAAAYAAAAFAAAADAAA
ABIAAAAFAAAAEgAAACEAAAAFAAAAIQAAACAAAAAFAAAAIAAAACcAAAAFAAAAJwAAABkAAAAF
AAAAGQAAAA0AAAAFAAAABwAAAAwAAAAGAAAADgAAAAcAAAAGAAAACwAAAA8AAAAGAAAADwAA
AA4AAAAHAAAADgAAABAAAAAHAAAAEAAAABEAAAAHAAAAEQAAABIAAAAHAAAAEgAAAAwAAAAI
AAAAEwAAAAkAAAAJAAAAFAAAABUAAAAJAAAAFQAAAAoAAAAJAAAAEwAAABYAAAAJAAAAFgAA
ABQAAAAKAAAAFQAAABcAAAAKAAAAFwAAABgAAAAKAAAAGAAAAA8AAAAKAAAADwAAAAsAAAAN
AAAAGQAAABoAAAANAAAAGgAAABsAAAAOAAAAHAAAAB0AAAAOAAAAHQAAABAAAAAOAAAADwAA
ABgAAAAOAAAAGAAAAB4AAAAOAAAAHgAAABwAAAAQAAAAHQAAABwAAAAQAAAAHAAAAB8AAAAQ
AAAAHwAAABEAAAARAAAAHwAAACAAAAARAAAAIAAAACEAAAARAAAAIQAAABIAAAAUAAAAIgAA
ABcAAAAUAAAAFwAAABUAAAAUAAAAFgAAACMAAAAUAAAAIwAAACQAAAAUAAAAJAAAACUAAAAU
AAAAJQAAACIAAAAXAAAAIgAAACYAAAAXAAAAJgAAAB4AAAAXAAAAHgAAABgAAAAZAAAAJwAA
ABoAAAAaAAAAKAAAACkAAAAaAAAAKQAAABsAAAAaAAAAJwAAAB8AAAAaAAAAHwAAACoAAAAa
AAAAKgAAACgAAAAbAAAAKQAAACsAAAAcAAAAHgAAACoAAAAcAAAAKgAAAB8AAAAeAAAAJgAA
ACwAAAAeAAAALAAAACoAAAAfAAAAJwAAACAAAAAiAAAAJQAAAC0AAAAiAAAALQAAACsAAAAi
AAAAKwAAACkAAAAiAAAAKQAAACYAAAAmAAAAKQAAACgAAAAmAAAAKAAAACwAAAAoAAAAKgAA
ACwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/NgAAAAQAAAAP
rIvAAAAAAAh4GMEy8ovAAAAAACaIF8FP5O+/nguyQAh4GMETrItAAAAAAAh4GMGWvYbAAAAA
AG5lC8G1y86/nguyQB84EMFtAPA/nguyQAh4GME28otAAAAAACaIF8GLW2bAAAAAAHy8+sCX
UOC6nguyQCjxB8GCcDjAAAAAAAjP3sCUvQbAAAAAAKlBwsAAAIA1AAAAAHR4asDT584/nguy
QB84EMGavYZAAAAAAG5lC8FxZCg7nguyQCjxB8GRfjhAAAAAAAjP3sCaaWZAAAAAAHy8+sBg
AAAAAAAAAAEAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAAHAAAAAAAA
AAcAAAAOAAAAAAAAAA4AAAARAAAAAAAAABEAAAAQAAAAAAAAABAAAAAMAAAAAAAAAAwAAAAL
AAAAAAAAAAsAAAAKAAAAAAAAAAoAAAAIAAAAAAAAAAgAAAAEAAAAAAAAAAQAAAABAAAAAQAA
AAQAAAACAAAAAgAAAAQAAAAFAAAAAgAAAAUAAAAJAAAAAgAAAAkAAAAPAAAAAgAAAA8AAAAN
AAAAAgAAAA0AAAAGAAAAAwAAAAYAAAAHAAAABAAAAAgAAAAFAAAABQAAAAgAAAAKAAAABQAA
AAoAAAALAAAABQAAAAsAAAAMAAAABQAAAAwAAAAJAAAABgAAAA0AAAAOAAAABgAAAA4AAAAH
AAAACQAAAAwAAAAPAAAADAAAABAAAAANAAAADAAAAA0AAAAPAAAADQAAABAAAAARAAAADQAA
ABEAAAAOAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0gAAAAE
AAAAy2c4QHQNMsHE/2jB1tN9QHQNMsGrhWLBLD26QAZue8FRHCDBAAAAAMJjY8FXmVTBAAAA
AHQNMsHes2jB6IKpQHQNMsH0HFLBgNToQMGNccFrKxrBKBzfQAZue8EjQhbB6wtMQAZue8EC
SizBAAAAAABBZ8HE3lDBAAAAAAZue8HeSC7Bj0sAQXQNMsGFCOnAppjGQHQNMsEQRUTBmnHL
QNpSPMGKIj7B0kvsQAZue8EKhg3BouDiQHQNMsHwuCzBlnT+QHQNMsHolRXBhOn/QHQNMsHy
wRLBxo4YQAZue8GdBi/BqCx9PwZue8E4gS/Bwu3tQAZue8GFCOnAp4vxQLgscMGFCOnAEFvu
QAZue8HkcwnByHTuQAZue8GhIATBhAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAACwAAAAAAAAALAAAAEQAAAAAAAAARAAAAEAAAAAAAAAAQAAAADwAA
AAAAAAAPAAAADAAAAAAAAAAMAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAG
AAAABwAAAAEAAAAHAAAAAgAAAAIAAAAIAAAACQAAAAIAAAAJAAAAAwAAAAIAAAAHAAAADgAA
AAIAAAAOAAAAFgAAAAIAAAAWAAAAFwAAAAIAAAAXAAAAFAAAAAIAAAAUAAAACgAAAAIAAAAK
AAAAEwAAAAIAAAATAAAAEgAAAAIAAAASAAAACAAAAAMAAAAJAAAACgAAAAMAAAAKAAAABAAA
AAQAAAAKAAAACwAAAAUAAAAMAAAADQAAAAUAAAANAAAABgAAAAYAAAAOAAAABwAAAAYAAAAN
AAAADwAAAAYAAAAPAAAAEAAAAAYAAAAQAAAAEQAAAAYAAAARAAAADgAAAAgAAAASAAAACQAA
AAkAAAASAAAAEwAAAAkAAAATAAAACgAAAAoAAAAUAAAACwAAAAsAAAAUAAAAFQAAAAsAAAAV
AAAAFgAAAAsAAAAWAAAAEQAAAAwAAAAPAAAADQAAAA4AAAARAAAAFgAAABQAAAAXAAAAFQAA
ABUAAAAXAAAAFgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9I
AAAABAAAAAAAAACeCzLB/LRowQAAAAC6lXvBzAMuwQAAAAAOZGPBk5pUwZLfN8CeCzLBF2xo
wTZPAMGeCzLB6LfowM7a7cC6lXvB6LfowJYgGcC6lXvBvdUuwQAAAACkQWfBMN5QwXDCxMC6
lXvBjloewShqgcCeCzLBXHxhwczw/8CeCzLBWpwSwbZu7sC6lXvB1lYEwYeS8cA8EXDB6Lfo
wFPkZcC6lXvBqj4qwcnX4MC6lXvBqFsWwfq66MCu7HHB4voZwbf4rMCeCzLBHb5QwdR7/sCe
CzLBpGkVwbJB7sC6lXvBXYsJwY5O7sC6lXvBSmsJwUA/7MC6lXvB/mENwV7N4sCeCzLBZbcs
wWV3y8AlUzzBlyQ+wZvexsCeCzLB+C1EwYQAAAAAAAAAAQAAAAcAAAAAAAAABwAAAAIAAAAA
AAAAAgAAAAMAAAAAAAAAAwAAAAkAAAAAAAAACQAAABAAAAAAAAAAEAAAABcAAAAAAAAAFwAA
ABUAAAAAAAAAFQAAABEAAAAAAAAAEQAAAAoAAAAAAAAACgAAAAQAAAAAAAAABAAAAAEAAAAB
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
AAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADgAAAAAAAAAOAAAADQAAAAAAAAANAAAADAAA
AAAAAAAMAAAAFAAAAAAAAAAUAAAADwAAAAAAAAAPAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAF
AAAABgAAAAEAAAAGAAAAEQAAAAEAAAARAAAAEgAAAAEAAAASAAAACgAAAAEAAAAKAAAACQAA
AAEAAAAJAAAACAAAAAEAAAAIAAAABwAAAAEAAAAHAAAAAgAAAAIAAAAHAAAAAwAAAAMAAAAI
AAAACQAAAAMAAAAJAAAACgAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAADQAA
AAMAAAANAAAADgAAAAMAAAAOAAAABAAAAAMAAAAHAAAACAAAAAUAAAAPAAAAEAAAAAUAAAAQ
AAAABgAAAAYAAAAQAAAAEQAAAAoAAAASAAAAEwAAAAoAAAATAAAACwAAAAsAAAATAAAADAAA
AAwAAAATAAAAFAAAAA8AAAAUAAAAEwAAAA8AAAATAAAAEAAAABAAAAATAAAAEQAAABEAAAAT
AAAAEgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9CAAAABAAA
AJhqPD8UELLAuKeBwQBAYrq8LSLBiCpvwQBAYroUELLAKJ6BwQcwYkAUELLAZ3N/wadDcEC3
FSPBiCpvwT5qOECeCzLBrP1owQBAYrqeCzLBXrRowRqo70AUELLA5B4EwZy9iUAUELLA/Dx5
wQZ6qUCeCzLBlBtSwSzIfUCeCzLBU4RiwdfmtUBRvQ7BiVpZwXSYxkCeCzLBl0ZEwVgZAEGe
CzLB5B4EwajGAUFhWyTB5B4EwZeU70AUELLApWcRweHhjUAUELLAB3J3wSKmAUGgzCPBMpEU
wTng4kCeCzLBkrsswaLk/0CeCzLBDcMSwV9AAEEa7jDB5B4EwV54/kCeCzLBjJYVwXgAAAAA
AAAAAQAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAAAA8AAAAAAAAADwAAABAAAAAAAAAAEAAA
AAgAAAAAAAAACAAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAAB
AAAABQAAAAYAAAABAAAABgAAAAIAAAACAAAABgAAAAcAAAADAAAACAAAAAQAAAAEAAAACQAA
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
AAAAAAADAAAABAAAAAAAAAAEAAAADgAAAAAAAAAOAAAADQAAAAAAAAANAAAAGAAAAAAAAAAY
AAAAFwAAAAAAAAAXAAAAFgAAAAAAAAAWAAAAEAAAAAAAAAAQAAAABQAAAAAAAAAFAAAAAQAA
AAEAAAAGAAAABwAAAAEAAAAFAAAACAAAAAEAAAAIAAAAFAAAAAEAAAAUAAAAGQAAAAEAAAAZ
AAAAGgAAAAEAAAAaAAAAGwAAAAEAAAAbAAAAEgAAAAEAAAASAAAABgAAAAIAAAAHAAAACQAA
AAIAAAAJAAAAAwAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAADQAAAAMAAAAN
AAAADgAAAAMAAAAOAAAABAAAAAMAAAAJAAAADwAAAAMAAAAPAAAACgAAAAUAAAAQAAAAEQAA
AAUAAAARAAAAHAAAAAUAAAAcAAAAEwAAAAUAAAATAAAACAAAAAYAAAASAAAABwAAAAcAAAAS
AAAACQAAAAgAAAATAAAACwAAAAgAAAALAAAAFAAAAAkAAAASAAAADwAAAAoAAAAPAAAACwAA
AAsAAAAVAAAAFgAAAAsAAAAWAAAAFwAAAAsAAAAXAAAAGAAAAAsAAAAYAAAADAAAAAsAAAAP
AAAAGQAAAAsAAAAZAAAAFAAAAAsAAAATAAAAFQAAAAwAAAAYAAAADQAAAA8AAAAaAAAAGQAA
AA8AAAASAAAAGwAAAA8AAAAbAAAAGgAAABAAAAAWAAAAEQAAABEAAAAWAAAAFQAAABEAAAAV
AAAAHAAAABMAAAAcAAAAFQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAgD9OAAAABAAAAAAAAACkmJTBAJA6ulSYwsC2iIXBAJA6uvibd8BAu5LBAJA6uoNAmcCA
6LDBR5enwLZOdsBEVbDBNi2vwAAAAABMJpXBcMBPvgAAAADZA43B5rfowHWmzMC2iIXBkEjx
vkqUqsBPPYzBAJA6umjK48C2iIXB5rfowKPKfsD7V5LBAJA6ulbCs8CrD6nBiDK4wLAAm8Ce
C7LB0mTIwIiVpsDtNI3BAJA6uu4r0sC2iIXBTFc7v9elhMD1ra/BACrRwAAAAADH3I7B3pHZ
wAAAAAC3xJPBWsZZwADgN7oIk5bBFBifvwAAAAAHVJXBcAisviiegcCckKLB5rfowGBL5cC2
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
AAAA1mbdwGOArcAAAAAAgoaIwNDUFsG1GwRBgoaIQNDUFsG1GwRB1mbdQGOArcAAAAAAiFX2
wOxEJMEAAAAAukyNwOxEJMG1GwRBukyNQOxEJMG1GwRBiFX2QOxEJMEAAAAAogAAAAAAAAAB
AAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAA
AAAAAAAGAAAACgAAAAAAAAAKAAAADgAAAAAAAAAOAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAY
AAAAHAAAAAAAAAAcAAAAGQAAAAAAAAAZAAAAFQAAAAAAAAAVAAAADwAAAAAAAAAPAAAACwAA
AAAAAAALAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAACAAAAAEAAAAIAAAAAgAAAAIAAAAI
AAAADAAAAAIAAAAMAAAAEQAAAAIAAAARAAAAFgAAAAIAAAAWAAAAGgAAAAIAAAAaAAAAGwAA
AAIAAAAbAAAAFwAAAAIAAAAXAAAAEgAAAAIAAAASAAAADQAAAAIAAAANAAAACQAAAAIAAAAJ
AAAABQAAAAIAAAAFAAAABAAAAAIAAAAEAAAAAwAAAAUAAAAJAAAABgAAAAYAAAAJAAAACgAA
AAcAAAALAAAADAAAAAcAAAAMAAAACAAAAAkAAAANAAAACgAAAAoAAAANAAAADgAAAAsAAAAP
AAAAEAAAAAsAAAAQAAAADAAAAAwAAAAQAAAAEQAAAA0AAAASAAAAEwAAAA0AAAATAAAADgAA
AA4AAAATAAAAFAAAAA8AAAAVAAAAFgAAAA8AAAAWAAAAEAAAABAAAAAWAAAAEQAAABIAAAAX
AAAAEwAAABMAAAAXAAAAFAAAABQAAAAXAAAAGAAAABUAAAAZAAAAGgAAABUAAAAaAAAAFgAA
ABcAAAAbAAAAGAAAABgAAAAbAAAAHAAAABkAAAAcAAAAGwAAABkAAAAbAAAAGgAAABAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD+cAAAABAAAAJAdeUAAAAAAtRsE
wbFmZkAAAAAA6b36wLOPlUCOVgPAsLJmv8oSjUAAI7S+tRsEwZAdecAAAAAAtRsEwQp8OEAA
AAAA7tXewMeijUCn9iPAAAAAAJkjq0B+OCLAWmKGvwAAAAAAAAAAWHlqwAAAAAD818W/6I4y
v2SRikAc8SHAAAAAAGF87EAn8JfAomu3v7f8mEDYcUq/tRsEwcoSjcAAI7S+tRsEwbOPlcCO
VgPAsLJmv7FmZsAAAAAA6b36wI10wkAs34TAAAAAAL7IBsAAAAAALjvCwGSRisAc8SHAAAAA
AAAAAADs9vq/AAAAAM3d7UBshaTAtRsEwX5p60BeZZLAtRsEwQU020Dh86LAAAAAAOJm3UCu
eq3AAAAAAGGXAkGqRCjB7t2Fv7f8mMDYcUq/tRsEwWF87MAn8JfAomu3v5kjq8B+OCLAWmKG
vwp8OMAAAAAA7tXewMeijcCn9iPAAAAAAPHFAUHOWCTBtRsEwUCp9kBFRSXBAAAAAJgBAUGe
CzLBznyDv4A8AUGeCzLBWmPyv4YcAEGeCzLBtRsEwa0K+EBcxCnBAAAAAH5p68BeZZLAtRsE
weJm3cCueq3AAAAAAAU028Dh86LAAAAAAI10wsAs34TAAAAAAM3d7cBshaTAtRsEwWGXAsGq
RCjB7t2Fv/ldAEGeCzLB0Ehsv4YcAMGeCzLBtRsEwdNH9UCeCzLBAAAAAECp9sBFRSXBAAAA
AHzMAcH2RiTBtRsEwYA8AcGeCzLBWmPyv5gBAcGeCzLBznyDv60K+MBcxCnBAAAAANNH9cCe
CzLBAAAAAPldAMGeCzLB0EhsvywBAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAA
AAwAAAAAAAAADAAAABUAAAAAAAAAFQAAABQAAAAAAAAAFAAAAB4AAAAAAAAAHgAAACIAAAAA
AAAAIgAAACsAAAAAAAAAKwAAAC4AAAAAAAAALgAAACgAAAAAAAAAKAAAACQAAAAAAAAAJAAA
ABkAAAAAAAAAGQAAAA0AAAAAAAAADQAAAAQAAAAAAAAABAAAAA8AAAAAAAAADwAAABwAAAAA
AAAAHAAAABEAAAAAAAAAEQAAAAgAAAAAAAAACAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAA
AAIAAAACAAAABgAAAAcAAAACAAAABwAAAAMAAAACAAAABQAAAAgAAAACAAAACAAAAAkAAAAC
AAAACQAAAAoAAAACAAAACgAAAAYAAAADAAAABwAAAAsAAAADAAAACwAAAAwAAAAEAAAADQAA
AA4AAAAEAAAADgAAAA8AAAAGAAAAEAAAAAcAAAAGAAAACgAAABMAAAAGAAAAEwAAABIAAAAG
AAAAEgAAAB0AAAAGAAAAHQAAACcAAAAGAAAAJwAAACYAAAAGAAAAJgAAACUAAAAGAAAAJQAA
AC0AAAAGAAAALQAAADEAAAAGAAAAMQAAADIAAAAGAAAAMgAAACwAAAAGAAAALAAAACMAAAAG
AAAAIwAAAB8AAAAGAAAAHwAAABcAAAAGAAAAFwAAABYAAAAGAAAAFgAAABAAAAAHAAAAEAAA
AAsAAAAIAAAAEQAAAA4AAAAIAAAADgAAAAkAAAAJAAAADgAAABIAAAAJAAAAEgAAABMAAAAJ
AAAAEwAAAAoAAAALAAAAFAAAABUAAAALAAAAFQAAAAwAAAALAAAAEAAAABYAAAALAAAAFgAA
ABcAAAALAAAAFwAAABgAAAALAAAAGAAAABQAAAANAAAAGQAAABoAAAANAAAAGgAAABsAAAAN
AAAAGwAAAA4AAAAOAAAAEQAAABwAAAAOAAAAHAAAAA8AAAAOAAAAGwAAAB0AAAAOAAAAHQAA
ABIAAAAUAAAAGAAAAB4AAAAXAAAAHwAAABgAAAAYAAAAIAAAACEAAAAYAAAAIQAAACIAAAAY
AAAAIgAAAB4AAAAYAAAAHwAAACMAAAAYAAAAIwAAACAAAAAZAAAAJAAAABoAAAAaAAAAJQAA
ACYAAAAaAAAAJgAAACcAAAAaAAAAJwAAABsAAAAaAAAAJAAAACgAAAAaAAAAKAAAACkAAAAa
AAAAKQAAACUAAAAbAAAAJwAAAB0AAAAgAAAAIwAAACoAAAAgAAAAKgAAACwAAAAgAAAALAAA
ADIAAAAgAAAAMgAAADMAAAAgAAAAMwAAADAAAAAgAAAAMAAAAC8AAAAgAAAALwAAACsAAAAg
AAAAKwAAACIAAAAgAAAAIgAAACEAAAAjAAAALAAAACoAAAAlAAAAKQAAAC0AAAAoAAAALgAA
ACkAAAApAAAALgAAACsAAAApAAAAKwAAAC8AAAApAAAALwAAADAAAAApAAAAMAAAADEAAAAp
AAAAMQAAAC0AAAAwAAAAMwAAADEAAAAxAAAAMwAAADIAAAA=</SharedString>
		<SharedString md5="awA43+s1hy5Qi2G1UcqLcw==">Q1NHUEhTBwAAAAKnfW1D74YwvJ2Jh8GjpCBARj9eR4xfyELMtI7Bm8YNRvoCB0aCK2lHEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0IAAAAEAAAA3/EbQdHwwsGg
NgDAaI4cQblixcHbINC/wBUYQY2lxcGSAPa/HKERQdbMxME4+uS/WAz9QHnNwcHheqG/WAz9
QCN6v8E9CIC/whUSQcTEv8HOIrK/ItAaQUQBwMGV3Lu/bW4ZQSg3xMEe9nC/WVUVQWSixcHK
bui+CtURQY6PxsHKbui+xRgSQY6PxsGK8pu/UEkPQY6PxsH/A5u/WAz9QI6PxsGbmZO/WAz9
QOFIvsHKbui+qKsLQeIlvsHKbui+QDgTQTZkv8HKbui+ODAXQTpAwcHfWR+/DpAPQfQyvsHK
bui+YPAVQS5DwcHKbui+WAz9QI6PxsHKbui+gIIVQSfhwMHKbui+eAAAAAAAAAABAAAAAgAA
AAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAG
AAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAACAAAAAEAAAAIAAAACQAAAAEAAAAJAAAACgAA
AAEAAAAKAAAACwAAAAEAAAALAAAAAgAAAAIAAAALAAAADAAAAAIAAAAMAAAADQAAAAIAAAAN
AAAAAwAAAAMAAAANAAAABAAAAAQAAAANAAAAFAAAAAQAAAAUAAAADgAAAAQAAAAOAAAABQAA
AAUAAAAOAAAABgAAAAYAAAAOAAAADwAAAAYAAAAPAAAABwAAAAcAAAAQAAAAEQAAAAcAAAAR
AAAACAAAAAcAAAAPAAAAEgAAAAcAAAASAAAAEAAAAAgAAAARAAAAEwAAAAgAAAATAAAACQAA
AAkAAAATAAAAFQAAAAkAAAAVAAAAEAAAAAkAAAAQAAAAEgAAAAkAAAASAAAADwAAAAkAAAAP
AAAADgAAAAkAAAAOAAAAFAAAAAkAAAAUAAAACgAAAAoAAAAUAAAADQAAAAoAAAANAAAADAAA
AAoAAAAMAAAACwAAABAAAAAVAAAAEQAAABEAAAAVAAAAEwAAABAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9CAAAABAAAAN/xG8HR8MLBoDYAwGiOHMG5YsXB2yDQ
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
AAEAAAAEAAAADwAAAAEAAAAPAAAAEgAAAAEAAAASAAAAEwAAAAEAAAATAAAAEAAAAAEAAAAQ
AAAABQAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAAAAIAAAAIAAAACQAA
AAIAAAAJAAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAAAwAAAAMAAAALAAAADAAAAAMAAAAM
AAAADQAAAAMAAAANAAAADgAAAAMAAAAOAAAADwAAAAMAAAAPAAAABAAAAAUAAAAQAAAABgAA
AAYAAAAQAAAABwAAAAcAAAAQAAAAEQAAAAcAAAARAAAAEwAAAAcAAAATAAAAEgAAAAcAAAAS
AAAACQAAAAcAAAAJAAAACAAAAAkAAAASAAAADwAAAAkAAAAPAAAADgAAAAkAAAAOAAAADQAA
AAkAAAANAAAADAAAAAkAAAAMAAAACwAAAAkAAAALAAAACgAAABAAAAATAAAAEQAAABAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8/AAAABAAAAFYM/UCfSL7ByG7o
vlYM/UCOj8bByG7ovlYM/UBJer/BLBKAv2D9wEB8ZcDBpgIvwM5n6EDZaL3ByG7ovmD9wECO
j8bByG7ovlYM/UCOj8bBnpGTv1YM/UCpzcHBWYShv2fly0CSzcLBy8lRwGD9wEA4CsHBBcY8
wGD9wEBbGMDBPyslwDzf2EC4G73ByG7ovmD9wEAyJr3ByG7ovmD9wECOj8bBpkRTwNlr1ECO
j8bBVKQ+wHOGzECyhMXB7AlawGD9wEBCmcTBIepUwGD9wECyR8PBsPRQwMPl1ECUD73ByG7o
vmD9wEBHaMbBiWpTwFxqyECOj8bBNRRXwHIAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAcAAAAA
AAAABwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAsAAAAAAAAACwAA
ABIAAAAAAAAAEgAAAAwAAAAAAAAADAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAA0AAAAB
AAAADQAAABQAAAABAAAAFAAAAA4AAAABAAAADgAAAAYAAAACAAAABwAAAAgAAAACAAAACAAA
AAkAAAACAAAACQAAAAMAAAADAAAACQAAABEAAAADAAAAEQAAABAAAAADAAAAEAAAABMAAAAD
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
AAQAAAACAAAAAgAAAAUAAAAGAAAAAgAAAAYAAAAHAAAAAgAAAAcAAAAIAAAAAgAAAAgAAAAJ
AAAAAgAAAAkAAAADAAAAAgAAAAQAAAAKAAAAAgAAAAoAAAALAAAAAgAAAAsAAAAFAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1QAAAAEAAAAhvEVwX5CwcHI
bui+AYEVwbDgwMHIbui+dlMVwbWhxcHIbui+kzgNwY6PxsF3PzM/nRkOwQRVwcGbdRo/+lX6
wN1CvcE67h9AkiT5wCewvME67h9ApTcTwdZjv8HIbui+TaIFwQK8vMG27pM/BNYRwY6PxsHI
bui++qYSwY6PxsFosQq+3rMEwY6PxsFKTN4/nbT9wPDBxcE67h9A+7b/wGkgwsE67h9AGlPq
wKEiusE67h9ArJAPwU0zvsHIbui+BZTmwE24ucE67h9AXvrAwI6PxsHIbui+6rf5wI6PxsE6
7h9Ar2QFwQiRvMHc2Ow+iAPLwMDGt8E67h9Ah97YwPYbvcHIbui+XvrAwPclvcHIbui+XvrA
wI6PxsE67h9AXvrAwBbKt8E67h9AXvrAwJ1rusGHsHs/MOfUwLwPvcHIbui+GozUwBsQvcHI
bui+nAAAAAAAAAABAAAABwAAAAAAAAAHAAAADwAAAAAAAAAPAAAAFQAAAAAAAAAVAAAAGgAA
AAAAAAAaAAAAGwAAAAAAAAAbAAAAFgAAAAAAAAAWAAAAEQAAAAAAAAARAAAACQAAAAAAAAAJ
AAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAA
AAAAAAAGAAAAAQAAAAEAAAAGAAAACAAAAAEAAAAIAAAABwAAAAIAAAAJAAAACgAAAAIAAAAK
AAAAAwAAAAMAAAALAAAADAAAAAMAAAAMAAAADQAAAAMAAAANAAAABAAAAAMAAAAKAAAACQAA
AAMAAAAJAAAAEQAAAAMAAAARAAAAFwAAAAMAAAAXAAAAEgAAAAMAAAASAAAACwAAAAQAAAAN
AAAABQAAAAUAAAANAAAADAAAAAUAAAAMAAAAEgAAAAUAAAASAAAAFwAAAAUAAAAXAAAAGAAA
AAUAAAAYAAAAFAAAAAUAAAAUAAAAEAAAAAUAAAAQAAAADgAAAAUAAAAOAAAABgAAAAYAAAAO
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
AA4AAAAKAAAAAQAAAAoAAAAEAAAAAgAAAAYAAAAHAAAAAwAAAAgAAAAJAAAABAAAAAoAAAAG
AAAABQAAAAsAAAAMAAAABQAAAAwAAAANAAAABgAAAAoAAAAHAAAABwAAAAoAAAAOAAAABwAA
AA4AAAAPAAAABwAAAA8AAAAQAAAACAAAABEAAAAMAAAACAAAAAwAAAALAAAACAAAAAsAAAAJ
AAAADAAAABEAAAANAAAADQAAABEAAAATAAAADQAAABMAAAASAAAADgAAABQAAAAPAAAADwAA
ABQAAAAQAAAAEAAAABQAAAATAAAAEgAAABMAAAAVAAAAEwAAABQAAAAWAAAAEwAAABYAAAAV
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzwAAAAEAAAACe6K
QPUcdsEcz+ZAKKKvQPUcdsGFVslA1FFmQPUcdsFYx75ATeKGQBLOoMGsNuJAzNiNQBLOoMFV
m+VAHiWdQBLOoMHgad9AbtqvQBLOoMGGecZA3bOtQBLOoMH7BKlANhetQBLOoMGDu6RA2ZSo
QPUcdsEFe5hAxwyBQPUcdsFzkplA1z12QBLOoMHyr6FAie5pQBLOoMGkXrRAZXhoQFH0nMHO
mrdAsOxzQBLOoMFV6slAdM+BQBLOoMHPqdlAgl+iQBLOoME+AZZAoUagQBLOoMFxEZZAfKmE
QBLOoMG/ZJhAhOprQBLOoMFePbxAbAAAAAAAAAABAAAACQAAAAAAAAAJAAAACgAAAAAAAAAK
AAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAAAQAA
AAEAAAAFAAAABgAAAAEAAAAGAAAABwAAAAEAAAAHAAAACAAAAAEAAAAIAAAACQAAAAIAAAAK
AAAACwAAAAIAAAALAAAADAAAAAIAAAAMAAAADQAAAAIAAAANAAAADgAAAAIAAAAOAAAADwAA
AAIAAAAPAAAAAwAAAAMAAAAPAAAADgAAAAMAAAAOAAAAEwAAAAMAAAATAAAADAAAAAMAAAAM
AAAACwAAAAMAAAALAAAAEgAAAAMAAAASAAAAEQAAAAMAAAARAAAAEAAAAAMAAAAQAAAACAAA
AAMAAAAIAAAABwAAAAMAAAAHAAAABgAAAAMAAAAGAAAABQAAAAMAAAAFAAAABAAAAAgAAAAQ
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
AAEAAAAHAAAADgAAAAEAAAAOAAAAFwAAAAEAAAAXAAAAIgAAAAEAAAAiAAAAGAAAAAEAAAAY
AAAADwAAAAEAAAAPAAAACAAAAAEAAAAIAAAAAwAAAAEAAAADAAAAAgAAAAQAAAAJAAAAEQAA
AAQAAAARAAAAHQAAAAQAAAAdAAAAIAAAAAQAAAAgAAAAFAAAAAQAAAAUAAAACwAAAAQAAAAL
AAAACgAAAAQAAAAKAAAABQAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAABgAA
AAYAAAANAAAABwAAAAYAAAAMAAAADQAAAAcAAAANAAAADgAAAAgAAAAPAAAAEAAAAAkAAAAS
AAAAEwAAAAkAAAATAAAAEQAAAAsAAAAUAAAADAAAAAwAAAAVAAAADQAAAAwAAAAUAAAAFQAA
AA0AAAAWAAAAFwAAAA0AAAAXAAAADgAAAA0AAAAVAAAAFgAAAA8AAAAYAAAAGQAAAA8AAAAZ
AAAAGgAAAA8AAAAaAAAAGwAAAA8AAAAbAAAAHAAAAA8AAAAcAAAAEAAAABEAAAATAAAAHQAA
ABIAAAAeAAAAEwAAABMAAAAfAAAAIAAAABMAAAAgAAAAHQAAABMAAAAeAAAAIQAAABMAAAAh
AAAAGwAAABMAAAAbAAAAGgAAABMAAAAaAAAAGQAAABMAAAAZAAAAHwAAABQAAAAgAAAAHwAA
ABQAAAAfAAAAFQAAABUAAAAfAAAAGQAAABUAAAAZAAAAFgAAABYAAAAZAAAAGAAAABYAAAAY
AAAAIgAAABYAAAAiAAAAFwAAABsAAAAhAAAAHAAAABwAAAAhAAAAIwAAAB4AAAAjAAAAIQAA
ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9IAAAABAAAAPbTbcAS
zqDBJnWuQHxCdsASzqDBxayhQFsXrsASzqDBJnWuQBBBZcBQ8cLBJnWuQOihPsCOj8bBtVgp
QBrVPMCOj8bBOu4fQG/xRcBwKb/BOu4fQLeqhMASzqDBtF6YQMYRRsD6H7/BOu4fQGRCYcBn
KLrBOu4fQE2yrcASzqDBewKpQPMPr8C5qrfBOu4fQPMPr8DQg6bBBtWhQPMPr8AhvaXBYzem
QPMPr8Crs6XBJnWuQI+Mb8COj8bBJnWuQPMPr8COj8bBOu4fQHRGoMASzqDBXwyWQGRZd8CQ
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
2DfAQvnOP/eStUFa2DfApNiaP2Hls0HoRq/Akr+RP3Nys0GTbrTA04ifP9lerEGTbrTAynep
PzZprEHoRq/A0jDiP+fHrkFa2DfAugAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAADQAAAAAAAAANAAAAEwAAAAAAAAATAAAAGgAAAAAAAAAaAAAAIAAA
AAAAAAAgAAAAGwAAAAAAAAAbAAAAFAAAAAAAAAAUAAAADgAAAAAAAAAOAAAABQAAAAAAAAAF
AAAAAQAAAAEAAAAFAAAAAgAAAAIAAAAGAAAAAwAAAAIAAAAFAAAABwAAAAIAAAAHAAAACAAA
AAIAAAAIAAAABgAAAAMAAAAJAAAACgAAAAMAAAAKAAAACwAAAAMAAAALAAAABAAAAAMAAAAG
AAAACQAAAAQAAAALAAAADAAAAAQAAAAMAAAADQAAAAUAAAAOAAAABwAAAAYAAAAIAAAAEAAA
AAYAAAAQAAAAFgAAAAYAAAAWAAAAHQAAAAYAAAAdAAAAHgAAAAYAAAAeAAAAGAAAAAYAAAAY
AAAAFwAAAAYAAAAXAAAAEQAAAAYAAAARAAAACgAAAAYAAAAKAAAACQAAAAcAAAAOAAAADwAA
AAcAAAAPAAAACAAAAAgAAAAPAAAAEAAAAAoAAAARAAAADAAAAAoAAAAMAAAACwAAAAwAAAAS
AAAAEwAAAAwAAAATAAAADQAAAAwAAAARAAAAFwAAAAwAAAAXAAAAEgAAAA4AAAAUAAAAFQAA
AA4AAAAVAAAADwAAAA8AAAAVAAAAFgAAAA8AAAAWAAAAEAAAABIAAAAXAAAAGAAAABIAAAAY
AAAAGQAAABIAAAAZAAAAGgAAABIAAAAaAAAAEwAAABQAAAAbAAAAHAAAABQAAAAcAAAAFQAA
ABUAAAAcAAAAFgAAABYAAAAcAAAAHQAAABgAAAAeAAAAHwAAABgAAAAfAAAAGQAAABkAAAAf
AAAAGgAAABoAAAAfAAAAIAAAABsAAAAgAAAAHAAAABwAAAAgAAAAHwAAABwAAAAfAAAAHQAA
AB0AAAAfAAAAHgAAAA==</SharedString>
		<SharedString md5="bGzDsiEVpDDe5ksM5gQJ5A==">Q1NHUEhTBwAAAAImAHlAvllHO3uL67srdEw75hQfPwX37ThCAzk7J0iyQLtE0bvcA6xAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP4QAAAAEAAAAwJrbPwAAALZg
GS2/0J/nP8GOd76SlBe/Y3Xlv8GOd76fyBe/BivZvwAAALZMyyy/XkPRP8GNdz4LMRS/VYT4
P/acmD7Hgp2+H28EQA8thT32xbm+Y3AHQMbJPb57OKS+fzzyP81b1r6O7bK+iqrwv81b1r6D
FLS+lt0DwNevxb45mUu+V64GwMbJPb4Q0Ke+Np8DwA8thT290ry+GA73v/acmD7kRZ++8RjP
v8GNdz4vchO/SHjLP01b1j7oM6e+1iX+P/acmD7GQo4+sbUHQA8thT1gW6A+BxriP0MH5z5g
DC6+h2flP0MH5z6cAyw+EkgKQMbJPb64e4c+3xUGQNevxb5QkBQ+H28EQNevxb6sf0W+VYT4
P4GO976XuFa8JdD3v4GO974hjoe8SuwFwNevxb5CyQ0+EkgKwMbJPb6vaoM+jcMHwA8thT1y
spw+szP+v/acmD7b9Is+0AThv0MH5z5gDC6+L/TJv01b1j5xX6W+PpTcP8GNdz6ClBc/Kqfo
PwAAALZQGS0/lb3LPwGO9z6XtFY8awXSP01b1j5u7bI+r/DyP8GOd777MBQ/osn4P81b1r7I
M6c+N/P4v81b1r5RX6U+dc7zv8GOd74fchM/YLzpvwAAALY8yyw/A3Ldv8GNdz6PyBc/OSLl
v0MH5z7OeCs+QRfLvwGO9z4hjIc83DzSv01b1j5jFLQ+/AAAAAAAAAABAAAAAgAAAAAAAAAC
AAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAABwAA
AAAAAAAHAAAAAQAAAAEAAAAHAAAACAAAAAEAAAAIAAAACQAAAAEAAAAJAAAAAgAAAAIAAAAJ
AAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAAAwAAAAMAAAALAAAADAAAAAMAAAAMAAAADQAA
AAMAAAANAAAADgAAAAMAAAAOAAAABAAAAAQAAAAPAAAABQAAAAQAAAAOAAAADwAAAAUAAAAQ
AAAAEQAAAAUAAAARAAAABgAAAAUAAAAPAAAAEgAAAAUAAAASAAAAEwAAAAUAAAATAAAAEAAA
AAYAAAARAAAAFAAAAAYAAAAUAAAABwAAAAcAAAAUAAAAFQAAAAcAAAAVAAAAFgAAAAcAAAAW
AAAACAAAAAgAAAAWAAAAFwAAAAgAAAAXAAAAGAAAAAgAAAAYAAAACQAAAAkAAAAYAAAACgAA
AAoAAAAZAAAAGgAAAAoAAAAaAAAACwAAAAoAAAAYAAAAGQAAAAsAAAAaAAAADAAAAAwAAAAa
AAAAGwAAAAwAAAAbAAAADQAAAA0AAAAbAAAAHAAAAA0AAAAcAAAAHQAAAA0AAAAdAAAAHgAA
AA0AAAAeAAAADgAAAA4AAAAeAAAADwAAAA8AAAAeAAAAHQAAAA8AAAAdAAAAEgAAABAAAAAT
AAAAHwAAABAAAAAfAAAAIAAAABAAAAAgAAAAEQAAABEAAAAgAAAAFAAAABIAAAAdAAAAIQAA
ABIAAAAhAAAAEwAAABMAAAAhAAAAIgAAABMAAAAiAAAAHwAAABQAAAAgAAAAIwAAABQAAAAj
AAAAJAAAABQAAAAkAAAAFQAAABUAAAAkAAAAFwAAABUAAAAXAAAAFgAAABcAAAAkAAAAGAAA
ABgAAAAlAAAAGQAAABgAAAAkAAAAJQAAABkAAAAlAAAAGgAAABoAAAAlAAAAJgAAABoAAAAm
AAAAJwAAABoAAAAnAAAAGwAAABsAAAAnAAAAHAAAABwAAAAnAAAAKAAAABwAAAAoAAAAKQAA
ABwAAAApAAAAHQAAAB0AAAApAAAAKgAAAB0AAAAqAAAAIQAAAB8AAAAiAAAAKwAAAB8AAAAr
AAAAKAAAAB8AAAAoAAAAIAAAACAAAAAoAAAAJwAAACAAAAAnAAAAIwAAACEAAAAqAAAAIgAA
ACIAAAAqAAAAKwAAACMAAAAnAAAAJgAAACMAAAAmAAAAJAAAACQAAAAmAAAAJQAAACgAAAAr
AAAAKQAAACkAAAArAAAAKgAAAA==</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>